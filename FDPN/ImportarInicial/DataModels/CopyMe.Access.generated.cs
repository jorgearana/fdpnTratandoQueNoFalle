//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : DATABASEMeet
	/// Data Source    : c:\swMeets7\swMeets5\DATABASEMeet.mdb
	/// Server Version : 04.00.0000
	/// </summary>
	public partial class DATABASEMeetDB : LinqToDB.Data.DataConnection
	{
		public ITable<Agegroup>           Agegroups           { get { return this.GetTable<Agegroup>(); } }
		public ITable<AltScoring>         AltScorings         { get { return this.GetTable<AltScoring>(); } }
		public ITable<Athlete>            Athletes            { get { return this.GetTable<Athlete>(); } }
		public ITable<CCrank>             CCranks             { get { return this.GetTable<CCrank>(); } }
		public ITable<CCtime>             CCtimes             { get { return this.GetTable<CCtime>(); } }
		public ITable<CheckList>          CheckLists          { get { return this.GetTable<CheckList>(); } }
		public ITable<CombinedEvent>      CombinedEvents      { get { return this.GetTable<CombinedEvent>(); } }
		public ITable<Division>           Divisions           { get { return this.GetTable<Division>(); } }
		public ITable<DualTeam>           DualTeams           { get { return this.GetTable<DualTeam>(); } }
		public ITable<Entry>              Entries             { get { return this.GetTable<Entry>(); } }
		public ITable<Event>              Events              { get { return this.GetTable<Event>(); } }
		public ITable<EventGetTime>       EventGetTimes       { get { return this.GetTable<EventGetTime>(); } }
		public ITable<Master>             Masters             { get { return this.GetTable<Master>(); } }
		public ITable<Meet>               Meets               { get { return this.GetTable<Meet>(); } }
		public ITable<MEETMOBILE2OPTIONS> MEETMOBILE2OPTIONS  { get { return this.GetTable<MEETMOBILE2OPTIONS>(); } }
		public ITable<MemorizedReport>    MemorizedReports    { get { return this.GetTable<MemorizedReport>(); } }
		public ITable<Multiage>           Multiages           { get { return this.GetTable<Multiage>(); } }
		public ITable<MultiageScnd>       MultiageScnds       { get { return this.GetTable<MultiageScnd>(); } }
		public ITable<Official>           Officials           { get { return this.GetTable<Official>(); } }
		public ITable<OMEOPTION>          OMEOPTIONS          { get { return this.GetTable<OMEOPTION>(); } }
		public ITable<Record>             Records             { get { return this.GetTable<Record>(); } }
		public ITable<RecordsApp>         RecordsApps         { get { return this.GetTable<RecordsApp>(); } }
		public ITable<RecordsbyEvent>     RecordsbyEvents     { get { return this.GetTable<RecordsbyEvent>(); } }
		public ITable<RecordTag>          RecordTags          { get { return this.GetTable<RecordTag>(); } }
		public ITable<Region>             Regions             { get { return this.GetTable<Region>(); } }
		public ITable<Relay>              Relays              { get { return this.GetTable<Relay>(); } }
		public ITable<RelayName>          RelayNames          { get { return this.GetTable<RelayName>(); } }
		public ITable<ScoreLane>          ScoreLanes          { get { return this.GetTable<ScoreLane>(); } }
		public ITable<Scoring>            Scorings            { get { return this.GetTable<Scoring>(); } }
		public ITable<ScoringImprovement> ScoringImprovements { get { return this.GetTable<ScoringImprovement>(); } }
		public ITable<Session>            Sessions            { get { return this.GetTable<Session>(); } }
		public ITable<Sessitem>           Sessitems           { get { return this.GetTable<Sessitem>(); } }
		public ITable<Split>              Splits              { get { return this.GetTable<Split>(); } }
		public ITable<StdLane>            StdLanes            { get { return this.GetTable<StdLane>(); } }
		public ITable<TagName>            TagNames            { get { return this.GetTable<TagName>(); } }
		public ITable<Team>               Teams               { get { return this.GetTable<Team>(); } }
		public ITable<TeamCoach>          TeamCoaches         { get { return this.GetTable<TeamCoach>(); } }
		public ITable<TimeStd>            TimeStds            { get { return this.GetTable<TimeStd>(); } }
		public ITable<WaveOffset>         WaveOffsets         { get { return this.GetTable<WaveOffset>(); } }

		public DATABASEMeetDB()
		{
			InitDataContext();
		}

		public DATABASEMeetDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("Agegroup")]
	public partial class Agegroup
	{
		[Column("Low_age"),  Nullable] public short? LowAge  { get; set; } // Short
		[Column("High_age"), Nullable] public short? HighAge { get; set; } // Short
	}

	[Table("AltScoring")]
	public partial class AltScoring
	{
		[Column("score_divno"), Nullable] public short? ScoreDivno { get; set; } // Short
		[Column("score_sex"),   Nullable] public char?  ScoreSex   { get; set; } // text(1)
		[Column("score_place"), Nullable] public short? ScorePlace { get; set; } // Short
		[Column("ind_score"),   Nullable] public float? IndScore   { get; set; } // Single
		[Column("rel_score"),   Nullable] public float? RelScore   { get; set; } // Single
	}

	[Table("Athlete")]
	public partial class Athlete
	{
		[Column("Ath_no"),              PrimaryKey, Identity] public int       AthNo              { get; set; } // Long
		[Column("Last_name"),           Nullable            ] public string    LastName           { get; set; } // text(20)
		[Column("First_name"),          Nullable            ] public string    FirstName          { get; set; } // text(20)
		[Column(),                      Nullable            ] public char?     Initial            { get; set; } // text(1)
		[Column("Ath_Sex"),             Nullable            ] public char?     AthSex             { get; set; } // text(1)
		[Column("Birth_date"),          Nullable            ] public DateTime? BirthDate          { get; set; } // DateTime
		[Column("Team_no"),             Nullable            ] public int?      TeamNo             { get; set; } // Long
		[Column("Schl_yr"),             Nullable            ] public string    SchlYr             { get; set; } // text(2)
		[Column("Ath_age"),             Nullable            ] public short?    AthAge             { get; set; } // Short
		[Column("Reg_no"),              Nullable            ] public string    RegNo              { get; set; } // text(14)
		[Column("Ath_stat"),            Nullable            ] public char?     AthStat            { get; set; } // text(1)
		[Column("Div_no"),              Nullable            ] public int?      DivNo              { get; set; } // Long
		[Column("Comp_no"),             Nullable            ] public int?      CompNo             { get; set; } // Long
		[Column("Pref_name"),           Nullable            ] public string    PrefName           { get; set; } // text(20)
		[Column("Home_addr1"),          Nullable            ] public string    HomeAddr1          { get; set; } // text(30)
		[Column("Home_addr2"),          Nullable            ] public string    HomeAddr2          { get; set; } // text(30)
		[Column("Home_city"),           Nullable            ] public string    HomeCity           { get; set; } // text(30)
		[Column("Home_prov"),           Nullable            ] public string    HomeProv           { get; set; } // text(30)
		[Column("Home_statenew"),       Nullable            ] public string    HomeStatenew       { get; set; } // text(3)
		[Column("Home_zip"),            Nullable            ] public string    HomeZip            { get; set; } // text(10)
		[Column("Home_cntry"),          Nullable            ] public string    HomeCntry          { get; set; } // text(3)
		[Column("Home_daytele"),        Nullable            ] public string    HomeDaytele        { get; set; } // text(20)
		[Column("Home_evetele"),        Nullable            ] public string    HomeEvetele        { get; set; } // text(20)
		[Column("Home_faxtele"),        Nullable            ] public string    HomeFaxtele        { get; set; } // text(20)
		[Column("Home_email"),          Nullable            ] public string    HomeEmail          { get; set; } // text(50)
		[Column("Citizen_of"),          Nullable            ] public string    CitizenOf          { get; set; } // text(3)
		[Column("Picture_bmp"),         Nullable            ] public string    PictureBmp         { get; set; } // text(30)
		[Column("second_club"),         Nullable            ] public string    SecondClub         { get; set; } // text(16)
		[Column("Home_celltele"),       Nullable            ] public string    HomeCelltele       { get; set; } // text(20)
		[Column("bcssa_type"),          Nullable            ] public string    BcssaType          { get; set; } // text(2)
		[Column("Home_emergcontact"),   Nullable            ] public string    HomeEmergcontact   { get; set; } // text(30)
		[Column("Home_emergtele"),      Nullable            ] public string    HomeEmergtele      { get; set; } // text(20)
		[Column("Disab_Scode"),         Nullable            ] public short?    DisabScode         { get; set; } // Short
		[Column("Disab_SBcode"),        Nullable            ] public short?    DisabSBcode        { get; set; } // Short
		[Column("Disab_SMcode"),        Nullable            ] public short?    DisabSMcode        { get; set; } // Short
		[Column("Disab_SDMSID"),        Nullable            ] public string    DisabSdmsid        { get; set; } // text(7)
		[Column("Disab_Exeptioncodes"), Nullable            ] public string    DisabExeptioncodes { get; set; } // text(14)
		[Column("Masters_RegVerified"),             Identity] public bool      MastersRegVerified { get; set; } // Bit
	}

	[Table("CCrank")]
	public partial class CCrank
	{
		[Column("Event_ptr"),   Nullable] public int?   EventPtr   { get; set; } // Long
		[Column("Ath_no"),      Nullable] public int?   AthNo      { get; set; } // Long
		[Column("Ath_sex"),     Nullable] public char?  AthSex     { get; set; } // text(1)
		[Column("Ath_stat"),    Nullable] public char?  AthStat    { get; set; } // text(1)
		[Column("Team_no"),     Nullable] public int?   TeamNo     { get; set; } // Long
		[Column("Chute_rank"),  Nullable] public int?   ChuteRank  { get; set; } // Long
		[Column("Chute_no"),    Nullable] public short? ChuteNo    { get; set; } // Short
		[Column("Div_no"),      Nullable] public int?   DivNo      { get; set; } // Long
		[Column("Ev_score"),    Nullable] public int?   EvScore    { get; set; } // Long
		[Column("JDEv_score"),  Nullable] public int?   JDEvScore  { get; set; } // Long
		[Column("score_stat"),  Nullable] public char?  ScoreStat  { get; set; } // text(1)
		[Column("multi_age"),   Nullable] public short? MultiAge   { get; set; } // Short
		[Column("Fin_hand"),    Identity] public bool   FinHand    { get; set; } // Bit
		[Column("Fin_stat"),    Nullable] public char?  FinStat    { get; set; } // text(1)
		[Column("Fin_Time"),    Nullable] public float? FinTime    { get; set; } // Single
		[Column("Fin_course"),  Nullable] public char?  FinCourse  { get; set; } // text(1)
		[Column("Fin_place"),   Nullable] public short? FinPlace   { get; set; } // Short
		[Column("Fin_jdplace"), Nullable] public short? FinJdplace { get; set; } // Short
		[Column("Fin_award"),   Nullable] public short? FinAward   { get; set; } // Short
		[Column("Fin_exh"),     Nullable] public char?  FinExh     { get; set; } // text(1)
		[Column("Team_ltr"),    Nullable] public char?  TeamLtr    { get; set; } // text(1)
	}

	[Table("CCtime")]
	public partial class CCtime
	{
		[Column("Event_ptr"),  Nullable] public int?   EventPtr  { get; set; } // Long
		[Column("Ath_no"),     Nullable] public int?   AthNo     { get; set; } // Long
		[Column("Chute_rank"), Nullable] public int?   ChuteRank { get; set; } // Long
		[Column("Chute_no"),   Nullable] public short? ChuteNo   { get; set; } // Short
		[Column("Fin_hand"),   Identity] public bool   FinHand   { get; set; } // Bit
		[Column("Fin_stat"),   Nullable] public char?  FinStat   { get; set; } // text(1)
		[Column("Fin_Time"),   Nullable] public float? FinTime   { get; set; } // Single
	}

	[Table("CheckList")]
	public partial class CheckList
	{
		[Column("meet_setup"),          Identity] public bool MeetSetup          { get; set; } // Bit
		[Column("athlete_pref"),        Identity] public bool AthletePref        { get; set; } // Bit
		[Column("seeding_pref"),        Identity] public bool SeedingPref        { get; set; } // Bit
		[Column("report_pref"),         Identity] public bool ReportPref         { get; set; } // Bit
		[Column("printer_setup"),       Identity] public bool PrinterSetup       { get; set; } // Bit
		[Column("entry_pref"),          Identity] public bool EntryPref          { get; set; } // Bit
		[Column("scoring_setup"),       Identity] public bool ScoringSetup       { get; set; } // Bit
		[Column("entryfee_surcharges"), Identity] public bool EntryfeeSurcharges { get; set; } // Bit
		[Column("divreg_names"),        Identity] public bool DivregNames        { get; set; } // Bit
		[Column("dir_pref"),            Identity] public bool DirPref            { get; set; } // Bit
		[Column("event_setup"),         Identity] public bool EventSetup         { get; set; } // Bit
		[Column("records_setup"),       Identity] public bool RecordsSetup       { get; set; } // Bit
		[Column("timestd_setup"),       Identity] public bool TimestdSetup       { get; set; } // Bit
		[Column("timing_setup"),        Identity] public bool TimingSetup        { get; set; } // Bit
		[Column("scbd_setup"),          Identity] public bool ScbdSetup          { get; set; } // Bit
		[Column("session_setup"),       Identity] public bool SessionSetup       { get; set; } // Bit
	}

	[Table("CombinedEvent")]
	public partial class CombinedEvent
	{
		[Column("Event_no"),      Nullable            ] public short?   EventNo      { get; set; } // Short
		[Column("Event_ltr"),     Nullable            ] public char?    EventLtr     { get; set; } // text(1)
		[Column("CombEvent_ptr"), PrimaryKey, Identity] public int      CombEventPtr { get; set; } // Long
		[Column("Event_sex"),     Nullable            ] public char?    EventSex     { get; set; } // text(1)
		[Column("Event_gender"),  Nullable            ] public char?    EventGender  { get; set; } // text(1)
		[Column("Low_age"),       Nullable            ] public short?   LowAge       { get; set; } // Short
		[Column("High_Age"),      Nullable            ] public short?   HighAge      { get; set; } // Short
		[Column("Num_events"),    Nullable            ] public short?   NumEvents    { get; set; } // Short
		[Column("Score_event"),               Identity] public bool     ScoreEvent   { get; set; } // Bit
		[Column("Div_no"),        Nullable            ] public short?   DivNo        { get; set; } // Short
		[Column("Comm_1"),        Nullable            ] public string   Comm1        { get; set; } // text(36)
		[Column("Comm_2"),        Nullable            ] public string   Comm2        { get; set; } // text(36)
		[Column("Comm_3"),        Nullable            ] public string   Comm3        { get; set; } // text(36)
		[Column("Comm_4"),        Nullable            ] public string   Comm4        { get; set; } // text(36)
		[Column("Entry_fee"),     Nullable            ] public decimal? EntryFee     { get; set; } // Currency
		[Column("Event_note"),    Nullable            ] public string   EventNote    { get; set; } // text(20)
		[Column("Event_ptr1"),    Nullable            ] public int?     EventPtr1    { get; set; } // Long
		[Column("Event_ptr2"),    Nullable            ] public int?     EventPtr2    { get; set; } // Long
		[Column("Event_ptr3"),    Nullable            ] public int?     EventPtr3    { get; set; } // Long
		[Column("Event_ptr4"),    Nullable            ] public int?     EventPtr4    { get; set; } // Long
		[Column("Event_ptr5"),    Nullable            ] public int?     EventPtr5    { get; set; } // Long
		[Column("Event_ptr6"),    Nullable            ] public int?     EventPtr6    { get; set; } // Long
		[Column("Event_ptr7"),    Nullable            ] public int?     EventPtr7    { get; set; } // Long
		[Column("Event_ptr8"),    Nullable            ] public int?     EventPtr8    { get; set; } // Long
		[Column("Event_ptr9"),    Nullable            ] public int?     EventPtr9    { get; set; } // Long
		[Column("Event_ptr10"),   Nullable            ] public int?     EventPtr10   { get; set; } // Long
	}

	[Table("Divisions")]
	public partial class Division
	{
		[Column("Div_no"),     Nullable] public int?      DivNo     { get; set; } // Long
		[Column("Div_abbr"),   Nullable] public string    DivAbbr   { get; set; } // text(10)
		[Column("Div_name"),   Nullable] public string    DivName   { get; set; } // text(20)
		[Column("old_date"),   Nullable] public DateTime? OldDate   { get; set; } // DateTime
		[Column("young_date"), Nullable] public DateTime? YoungDate { get; set; } // DateTime
	}

	[Table("DualTeams")]
	public partial class DualTeam
	{
		[Column("Team_gender"), Nullable] public char? TeamGender { get; set; } // text(1)
		[Column("aTeam_no"),    Nullable] public int?  ATeamNo    { get; set; } // Long
		[Column("bTeam_no"),    Nullable] public int?  BTeamNo    { get; set; } // Long
	}

	[Table("Entry")]
	public partial class Entry
	{
		[Column("Event_ptr"),         Nullable] public int?   EventPtr         { get; set; } // Long
		[Column("Ath_no"),            Nullable] public int?   AthNo            { get; set; } // Long
		[Column("ActSeed_course"),    Nullable] public char?  ActSeedCourse    { get; set; } // text(1)
		[Column("ActualSeed_time"),   Nullable] public float? ActualSeedTime   { get; set; } // Single
		[Column("ConvSeed_course"),   Nullable] public char?  ConvSeedCourse   { get; set; } // text(1)
		[Column("ConvSeed_time"),     Nullable] public float? ConvSeedTime     { get; set; } // Single
		[Column("Scr_stat"),          Identity] public bool   ScrStat          { get; set; } // Bit
		[Column("Spec_stat"),         Nullable] public char?  SpecStat         { get; set; } // text(1)
		[Column("Dec_stat"),          Nullable] public char?  DecStat          { get; set; } // text(1)
		[Column("Alt_stat"),          Identity] public bool   AltStat          { get; set; } // Bit
		[Column("Bonus_event"),       Identity] public bool   BonusEvent       { get; set; } // Bit
		[Column("Div_no"),            Nullable] public int?   DivNo            { get; set; } // Long
		[Column("Ev_score"),          Nullable] public float? EvScore          { get; set; } // Single
		[Column("JDEv_score"),        Nullable] public float? JDEvScore        { get; set; } // Single
		[Column("Seed_place"),        Nullable] public short? SeedPlace        { get; set; } // Short
		[Column("event_age"),         Nullable] public short? EventAge         { get; set; } // Short
		[Column("Pre_heat"),          Nullable] public short? PreHeat          { get; set; } // Short
		[Column("Pre_lane"),          Nullable] public short? PreLane          { get; set; } // Short
		[Column("Pre_stat"),          Nullable] public char?  PreStat          { get; set; } // text(1)
		[Column("Pre_Time"),          Nullable] public float? PreTime          { get; set; } // Single
		[Column("Pre_course"),        Nullable] public char?  PreCourse        { get; set; } // text(1)
		[Column("Pre_heatplace"),     Nullable] public short? PreHeatplace     { get; set; } // Short
		[Column("Pre_place"),         Nullable] public short? PrePlace         { get; set; } // Short
		[Column("Pre_jdplace"),       Nullable] public short? PreJdplace       { get; set; } // Short
		[Column("Pre_exh"),           Nullable] public char?  PreExh           { get; set; } // text(1)
		[Column("Pre_points"),        Nullable] public short? PrePoints        { get; set; } // Short
		[Column("Pre_back1"),         Nullable] public float? PreBack1         { get; set; } // Single
		[Column("Pre_back2"),         Nullable] public float? PreBack2         { get; set; } // Single
		[Column("Pre_back3"),         Nullable] public float? PreBack3         { get; set; } // Single
		[Column("Pre_watch1"),        Nullable] public float? PreWatch1        { get; set; } // Single
		[Column("Pre_pad"),           Nullable] public float? PrePad           { get; set; } // Single
		[Column("Pre_dqcode"),        Nullable] public string PreDqcode        { get; set; } // text(2)
		[Column("Pre_dqcodeSecond"),  Nullable] public string PreDqcodeSecond  { get; set; } // text(2)
		[Column("Pre_TimeType"),      Nullable] public char?  PreTimeType      { get; set; } // text(1)
		[Column("Fin_heat"),          Nullable] public short? FinHeat          { get; set; } // Short
		[Column("Fin_lane"),          Nullable] public short? FinLane          { get; set; } // Short
		[Column("Fin_stat"),          Nullable] public char?  FinStat          { get; set; } // text(1)
		[Column("Fin_Time"),          Nullable] public float? FinTime          { get; set; } // Single
		[Column("Fin_course"),        Nullable] public char?  FinCourse        { get; set; } // text(1)
		[Column("Fin_heatplace"),     Nullable] public short? FinHeatplace     { get; set; } // Short
		[Column("Fin_jdheatplace"),   Nullable] public short? FinJdheatplace   { get; set; } // Short
		[Column("Fin_place"),         Nullable] public short? FinPlace         { get; set; } // Short
		[Column("Fin_jdplace"),       Nullable] public short? FinJdplace       { get; set; } // Short
		[Column("Fin_exh"),           Nullable] public char?  FinExh           { get; set; } // text(1)
		[Column("Fin_points"),        Nullable] public short? FinPoints        { get; set; } // Short
		[Column("Fin_back1"),         Nullable] public float? FinBack1         { get; set; } // Single
		[Column("Fin_back2"),         Nullable] public float? FinBack2         { get; set; } // Single
		[Column("Fin_back3"),         Nullable] public float? FinBack3         { get; set; } // Single
		[Column("Fin_watch1"),        Nullable] public float? FinWatch1        { get; set; } // Single
		[Column("Fin_pad"),           Nullable] public float? FinPad           { get; set; } // Single
		[Column("Fin_dqcode"),        Nullable] public string FinDqcode        { get; set; } // text(2)
		[Column("Fin_dqcodeSecond"),  Nullable] public string FinDqcodeSecond  { get; set; } // text(2)
		[Column("Fin_ptsplace"),      Nullable] public short? FinPtsplace      { get; set; } // Short
		[Column("fin_heatltr"),       Nullable] public char?  FinHeatltr       { get; set; } // text(1)
		[Column("fin_TimeType"),      Nullable] public char?  FinTimeType      { get; set; } // text(1)
		[Column("Sem_heat"),          Nullable] public short? SemHeat          { get; set; } // Short
		[Column("Sem_lane"),          Nullable] public short? SemLane          { get; set; } // Short
		[Column("Sem_stat"),          Nullable] public char?  SemStat          { get; set; } // text(1)
		[Column("Sem_Time"),          Nullable] public float? SemTime          { get; set; } // Single
		[Column("Sem_course"),        Nullable] public char?  SemCourse        { get; set; } // text(1)
		[Column("Sem_heatplace"),     Nullable] public short? SemHeatplace     { get; set; } // Short
		[Column("Sem_place"),         Nullable] public short? SemPlace         { get; set; } // Short
		[Column("Sem_jdplace"),       Nullable] public short? SemJdplace       { get; set; } // Short
		[Column("Sem_exh"),           Nullable] public char?  SemExh           { get; set; } // text(1)
		[Column("Sem_points"),        Nullable] public short? SemPoints        { get; set; } // Short
		[Column("Sem_back1"),         Nullable] public float? SemBack1         { get; set; } // Single
		[Column("Sem_back2"),         Nullable] public float? SemBack2         { get; set; } // Single
		[Column("Sem_back3"),         Nullable] public float? SemBack3         { get; set; } // Single
		[Column("Sem_watch1"),        Nullable] public float? SemWatch1        { get; set; } // Single
		[Column("Sem_pad"),           Nullable] public float? SemPad           { get; set; } // Single
		[Column("Sem_dqcode"),        Nullable] public string SemDqcode        { get; set; } // text(2)
		[Column("Sem_dqcodeSecond"),  Nullable] public string SemDqcodeSecond  { get; set; } // text(2)
		[Column("Sem_TimeType"),      Nullable] public char?  SemTimeType      { get; set; } // text(1)
		[Column("dq_type"),           Nullable] public char?  DqType           { get; set; } // text(1)
		[Column("Fin_group"),         Nullable] public short? FinGroup         { get; set; } // Short
		[Column("Fin_dolphin1"),      Nullable] public float? FinDolphin1      { get; set; } // Single
		[Column("Fin_dolphin2"),      Nullable] public float? FinDolphin2      { get; set; } // Single
		[Column("Fin_dolphin3"),      Nullable] public float? FinDolphin3      { get; set; } // Single
		[Column("Pre_dolphin1"),      Nullable] public float? PreDolphin1      { get; set; } // Single
		[Column("Pre_dolphin2"),      Nullable] public float? PreDolphin2      { get; set; } // Single
		[Column("Pre_dolphin3"),      Nullable] public float? PreDolphin3      { get; set; } // Single
		[Column("Sem_dolphin1"),      Nullable] public float? SemDolphin1      { get; set; } // Single
		[Column("Sem_dolphin2"),      Nullable] public float? SemDolphin2      { get; set; } // Single
		[Column("Sem_dolphin3"),      Nullable] public float? SemDolphin3      { get; set; } // Single
		[Column("early_seed"),        Identity] public bool   EarlySeed        { get; set; } // Bit
		[Column("super_prefinalist"), Identity] public bool   SuperPrefinalist { get; set; } // Bit
		[Column("super_finfinalist"), Identity] public bool   SuperFinfinalist { get; set; } // Bit
		[Column("fin_adjuststat"),    Nullable] public char?  FinAdjuststat    { get; set; } // text(1)
		[Column("pre_adjuststat"),    Nullable] public char?  PreAdjuststat    { get; set; } // text(1)
		[Column("sem_adjuststat"),    Nullable] public char?  SemAdjuststat    { get; set; } // text(1)
		[Column("fin_divingdd"),      Nullable] public string FinDivingdd      { get; set; } // text(4)
		[Column("pre_divingdd"),      Nullable] public string PreDivingdd      { get; set; } // text(4)
		[Column("sem_divingdd"),      Nullable] public string SemDivingdd      { get; set; } // text(4)
		[Column("entry_method"),      Nullable] public char?  EntryMethod      { get; set; } // text(1)
		[Column("fin_dqofficial"),    Nullable] public int?   FinDqofficial    { get; set; } // Long
		[Column("pre_dqofficial"),    Nullable] public int?   PreDqofficial    { get; set; } // Long
		[Column("sem_dqofficial"),    Nullable] public int?   SemDqofficial    { get; set; } // Long
		[Column("pre_contacted"),     Identity] public bool   PreContacted     { get; set; } // Bit
		[Column("Fin_reactiontime1"), Nullable] public string FinReactiontime1 { get; set; } // text(8)
		[Column("Pre_reactiontime1"), Nullable] public string PreReactiontime1 { get; set; } // text(8)
		[Column("Sem_reactiontime1"), Nullable] public string SemReactiontime1 { get; set; } // text(8)
	}

	[Table("Event")]
	public partial class Event
	{
		[Column("Event_no"),                       Nullable            ] public short?    EventNo                       { get; set; } // Short
		[Column("Event_ltr"),                      Nullable            ] public char?     EventLtr                      { get; set; } // text(1)
		[Column("Event_ptr"),                      PrimaryKey, Identity] public int       EventPtr                      { get; set; } // Long
		[Column("Ind_rel"),                        Nullable            ] public char?     IndRel                        { get; set; } // text(1)
		[Column("Event_sex"),                      Nullable            ] public char?     EventSex                      { get; set; } // text(1)
		[Column("Event_gender"),                   Nullable            ] public char?     EventGender                   { get; set; } // text(1)
		[Column("Event_dist"),                     Nullable            ] public float?    EventDist                     { get; set; } // Single
		[Column("Event_stroke"),                   Nullable            ] public char?     EventStroke                   { get; set; } // text(1)
		[Column("Low_age"),                        Nullable            ] public short?    LowAge                        { get; set; } // Short
		[Column("High_Age"),                       Nullable            ] public short?    HighAge                       { get; set; } // Short
		[Column("Multi_age"),                                  Identity] public bool      MultiAge                      { get; set; } // Bit
		[Column("Event_stat"),                     Nullable            ] public char?     EventStat                     { get; set; } // text(1)
		[Column("Event_rounds"),                   Nullable            ] public short?    EventRounds                   { get; set; } // Short
		[Column("Num_prelanes"),                   Nullable            ] public short?    NumPrelanes                   { get; set; } // Short
		[Column("Num_finlanes"),                   Nullable            ] public short?    NumFinlanes                   { get; set; } // Short
		[Column("Heats_infinal"),                  Nullable            ] public char?     HeatsInfinal                  { get; set; } // text(1)
		[Column("Heats_insemi"),                   Nullable            ] public short?    HeatsInsemi                   { get; set; } // Short
		[Column("Std_lanes"),                      Nullable            ] public char?     StdLanes                      { get; set; } // text(1)
		[Column("Auto_seed"),                                  Identity] public bool      AutoSeed                      { get; set; } // Bit
		[Column("Twoperlane_req"),                             Identity] public bool      TwoperlaneReq                 { get; set; } // Bit
		[Column("Preheat_order"),                  Nullable            ] public char?     PreheatOrder                  { get; set; } // text(1)
		[Column("Finheat_order"),                  Nullable            ] public char?     FinheatOrder                  { get; set; } // text(1)
		[Column("Score_event"),                                Identity] public bool      ScoreEvent                    { get; set; } // Bit
		[Column("Div_no"),                         Nullable            ] public short?    DivNo                         { get; set; } // Short
		[Column("Relay_size"),                     Nullable            ] public short?    RelaySize                     { get; set; } // Short
		[Column("Comm_1"),                         Nullable            ] public string    Comm1                         { get; set; } // text(36)
		[Column("Comm_2"),                         Nullable            ] public string    Comm2                         { get; set; } // text(36)
		[Column("Comm_3"),                         Nullable            ] public string    Comm3                         { get; set; } // text(36)
		[Column("Comm_4"),                         Nullable            ] public string    Comm4                         { get; set; } // text(36)
		[Column("Entry_fee"),                      Nullable            ] public decimal?  EntryFee                      { get; set; } // Currency
		[Column("Is_locked"),                                  Identity] public bool      IsLocked                      { get; set; } // Bit
		[Column("Locked_by"),                      Nullable            ] public string    LockedBy                      { get; set; } // text(20)
		[Column("Event_Type"),                     Nullable            ] public char?     EventType                     { get; set; } // text(1)
		[Column("Locked_list"),                    Nullable            ] public string    LockedList                    { get; set; } // text(12)
		[Column("Event_note"),                     Nullable            ] public string    EventNote                     { get; set; } // text(20)
		[Column("Suppress_stroke"),                            Identity] public bool      SuppressStroke                { get; set; } // Bit
		[Column("Custom_ABCFinal"),                            Identity] public bool      CustomABCFinal                { get; set; } // Bit
		[Column("Num_dives"),                      Nullable            ] public short?    NumDives                      { get; set; } // Short
		[Column("Num_HeatsInFinal"),               Nullable            ] public short?    NumHeatsInFinal               { get; set; } // Short
		[Column("Multiage_SuperFinal"),                        Identity] public bool      MultiageSuperFinal            { get; set; } // Bit
		[Column("Finals_LanesVary"),                           Identity] public bool      FinalsLanesVary               { get; set; } // Bit
		[Column("Finals_LanesVaryOrder"),          Nullable            ] public string    FinalsLanesVaryOrder          { get; set; } // text(18)
		[Column("ABCfinal_order"),                 Nullable            ] public string    ABCfinalOrder                 { get; set; } // text(6)
		[Column("ABC_Style"),                                  Identity] public bool      AbcStyle                      { get; set; } // Bit
		[Column("PrelimsAs_ExtendedFinal"),                    Identity] public bool      PrelimsAsExtendedFinal        { get; set; } // Bit
		[Column("Num_LanesInBestHeatsTimedFinal"), Nullable            ] public short?    NumLanesInBestHeatsTimedFinal { get; set; } // Short
		[Column("Num_BestHeatsTimedFinal"),        Nullable            ] public short?    NumBestHeatsTimedFinal        { get; set; } // Short
		[Column("TimedFinal_LanesVary"),                       Identity] public bool      TimedFinalLanesVary           { get; set; } // Bit
		[Column("ScoreTimedFinal_asABC"),                      Identity] public bool      ScoreTimedFinalAsABC          { get; set; } // Bit
		[Column("Num_HeatsInTimedFinalToScore"),   Nullable            ] public short?    NumHeatsInTimedFinalToScore   { get; set; } // Short
		[Column("Pads_BothEnds"),                              Identity] public bool      PadsBothEnds                  { get; set; } // Bit
		[Column("Multiage_SuperSeed"),                         Identity] public bool      MultiageSuperSeed             { get; set; } // Bit
		[Column("Suppress_distance"),                          Identity] public bool      SuppressDistance              { get; set; } // Bit
		[Column("Fin_AwardsPrinted"),                          Identity] public bool      FinAwardsPrinted              { get; set; } // Bit
		[Column("Pre_AwardsPrinted"),                          Identity] public bool      PreAwardsPrinted              { get; set; } // Bit
		[Column("Sem_AwardsPrinted"),                          Identity] public bool      SemAwardsPrinted              { get; set; } // Bit
		[Column("FastTimeStd_Abbr"),               Nullable            ] public string    FastTimeStdAbbr               { get; set; } // text(4)
		[Column("SlowTimeStd_Abbr"),               Nullable            ] public string    SlowTimeStdAbbr               { get; set; } // text(4)
		[Column("SuperFinal_ElimOldAgeGrp"),                   Identity] public bool      SuperFinalElimOldAgeGrp       { get; set; } // Bit
		[Column("SeedMultiAge_OldToYoung"),                    Identity] public bool      SeedMultiAgeOldToYoung        { get; set; } // Bit
		[Column("Multi_ageScnd"),                              Identity] public bool      MultiAgeScnd                  { get; set; } // Bit
		[Column("Num_RelayLegs"),                  Nullable            ] public short?    NumRelayLegs                  { get; set; } // Short
		[Column("Pads_BothEndsFinals"),                        Identity] public bool      PadsBothEndsFinals            { get; set; } // Bit
		[Column("Checkin_starttime"),              Nullable            ] public int?      CheckinStarttime              { get; set; } // Long
		[Column("Checkin_endtime"),                Nullable            ] public int?      CheckinEndtime                { get; set; } // Long
		[Column("Checkin_startdate"),              Nullable            ] public DateTime? CheckinStartdate              { get; set; } // DateTime
		[Column("Checkin_enddate"),                Nullable            ] public DateTime? CheckinEnddate                { get; set; } // DateTime
		[Column("Num_semlanes"),                   Nullable            ] public short?    NumSemlanes                   { get; set; } // Short
		[Column("EvtMaxAgeFor_CFinal"),            Nullable            ] public short?    EvtMaxAgeForCFinal            { get; set; } // Short
		[Column("EvtMaxAgeNumHeats_CFinal"),       Nullable            ] public short?    EvtMaxAgeNumHeatsCFinal       { get; set; } // Short
		[Column("fin_actualstarttime"),            Nullable            ] public int?      FinActualstarttime            { get; set; } // Long
		[Column("sem_actualstarttime"),            Nullable            ] public int?      SemActualstarttime            { get; set; } // Long
		[Column("pre_actualstarttime"),            Nullable            ] public int?      PreActualstarttime            { get; set; } // Long
		[Column("Swimoff_SourcePtr"),              Nullable            ] public int?      SwimoffSourcePtr              { get; set; } // Long
		[Column("Swimoff_SourceRndLtr"),           Nullable            ] public char?     SwimoffSourceRndLtr           { get; set; } // text(1)
		[Column("Swimoff_Created"),                Nullable            ] public DateTime? SwimoffCreated                { get; set; } // DateTime
	}

	[Table("EventGetTimes")]
	public partial class EventGetTime
	{
		[Column("Event_ptr"),   Nullable] public int?      EventPtr   { get; set; } // Long
		[Column("Heat_no"),     Nullable] public short?    HeatNo     { get; set; } // Short
		[Column("Vendor_abbr"), Nullable] public string    VendorAbbr { get; set; } // text(5)
		[Column("Race_number"), Nullable] public string    RaceNumber { get; set; } // text(6)
		[Column("Get_Date"),    Nullable] public DateTime? GetDate    { get; set; } // DateTime
		[Column("Get_Time"),    Nullable] public int?      GetTime    { get; set; } // Long
		[Column("Now_Date"),    Nullable] public DateTime? NowDate    { get; set; } // DateTime
		[Column("Now_Time"),    Nullable] public int?      NowTime    { get; set; } // Long
		[Column("Rnd_ltr"),     Nullable] public char?     RndLtr     { get; set; } // text(1)
	}

	[Table("Masters")]
	public partial class Master
	{
		[Column("timer_type"),     Nullable] public short? TimerType     { get; set; } // Short
		[Column("pool_name"),      Nullable] public string PoolName      { get; set; } // text(45)
		[Column("pool_city"),      Nullable] public string PoolCity      { get; set; } // text(20)
		[Column("pool_state"),     Nullable] public string PoolState     { get; set; } // text(3)
		[Column("pool_lmsc"),      Nullable] public string PoolLmsc      { get; set; } // text(3)
		[Column("Meet_type"),      Nullable] public short? MeetType      { get; set; } // Short
		[Column("ref_name"),       Nullable] public string RefName       { get; set; } // text(40)
		[Column("sub_name"),       Nullable] public string SubName       { get; set; } // text(40)
		[Column("sub_address"),    Nullable] public string SubAddress    { get; set; } // text(40)
		[Column("sub_city"),       Nullable] public string SubCity       { get; set; } // text(20)
		[Column("sub_state"),      Nullable] public string SubState      { get; set; } // text(3)
		[Column("sub_zip"),        Nullable] public string SubZip        { get; set; } // text(10)
		[Column("sub_phone"),      Nullable] public string SubPhone      { get; set; } // text(20)
		[Column("sub_email"),      Nullable] public string SubEmail      { get; set; } // text(50)
		[Column("sendto_name"),    Nullable] public string SendtoName    { get; set; } // text(40)
		[Column("sendto_address"), Nullable] public string SendtoAddress { get; set; } // text(40)
		[Column("sendto_city"),    Nullable] public string SendtoCity    { get; set; } // text(20)
		[Column("sendto_state"),   Nullable] public string SendtoState   { get; set; } // text(3)
		[Column("sendto_zip"),     Nullable] public string SendtoZip     { get; set; } // text(10)
		[Column("sendto_email"),   Nullable] public string SendtoEmail   { get; set; } // text(50)
		[Column("record_name"),    Nullable] public string RecordName    { get; set; } // text(12)
	}

	[Table("Meet")]
	public partial class Meet
	{
		[Column("Meet_name1"),                                     Nullable] public string    MeetName1                                     { get; set; } // text(45)
		[Column("Meet_header1"),                                   Nullable] public string    MeetHeader1                                   { get; set; } // text(75)
		[Column("Meet_header2"),                                   Nullable] public string    MeetHeader2                                   { get; set; } // text(75)
		[Column("Meet_location"),                                  Nullable] public string    MeetLocation                                  { get; set; } // text(45)
		[Column("Meet_start"),                                     Nullable] public DateTime? MeetStart                                     { get; set; } // DateTime
		[Column("Meet_end"),                                       Nullable] public DateTime? MeetEnd                                       { get; set; } // DateTime
		[Column("Meet_idformat"),                                  Nullable] public short?    MeetIdformat                                  { get; set; } // Short
		[Column("Meet_class"),                                     Nullable] public short?    MeetClass                                     { get; set; } // Short
		[Column("Meet_meettype"),                                  Nullable] public short?    MeetMeettype                                  { get; set; } // Short
		[Column("Meet_course"),                                    Nullable] public short?    MeetCourse                                    { get; set; } // Short
		[Column("Enter_ages"),                                     Identity] public bool      EnterAges                                     { get; set; } // Bit
		[Column("Enter_birthdate"),                                Identity] public bool      EnterBirthdate                                { get; set; } // Bit
		[Column("Calc_date"),                                      Nullable] public DateTime? CalcDate                                      { get; set; } // DateTime
		[Column("Enter_schoolyr"),                                 Identity] public bool      EnterSchoolyr                                 { get; set; } // Bit
		[Column("A_Relaysonly"),                                   Identity] public bool      ARelaysonly                                   { get; set; } // Bit
		[Column("Use_hometown"),                                   Identity] public bool      UseHometown                                   { get; set; } // Bit
		[Column("Show_countrycode"),                               Identity] public bool      ShowCountrycode                               { get; set; } // Bit
		[Column("Scores_afterevt"),                                Identity] public bool      ScoresAfterevt                                { get; set; } // Bit
		[Column("Lastname_first"),                                 Identity] public bool      LastnameFirst                                 { get; set; } // Bit
		[Column("Punct_names"),                                    Identity] public bool      PunctNames                                    { get; set; } // Bit
		[Column("Punct_Teams"),                                    Identity] public bool      PunctTeams                                    { get; set; } // Bit
		[Column("win_mm"),                                         Identity] public bool      WinMm                                         { get; set; } // Bit
		[Column("meet_numlanes"),                                  Nullable] public short?    MeetNumlanes                                  { get; set; } // Short
		[Column("prelimheats_circle"),                             Nullable] public short?    PrelimheatsCircle                             { get; set; } // Short
		[Column("timedfinal_circleseed"),                          Identity] public bool      TimedfinalCircleseed                          { get; set; } // Bit
		[Column("foreign_infinal"),                                Identity] public bool      ForeignInfinal                                { get; set; } // Bit
		[Column("exh_infinal"),                                    Identity] public bool      ExhInfinal                                    { get; set; } // Bit
		[Column("nonconform_last"),                                Identity] public bool      NonconformLast                                { get; set; } // Bit
		[Column("course_order"),                                   Nullable] public string    CourseOrder                                   { get; set; } // text(255)
		[Column("seed_exhlast"),                                   Identity] public bool      SeedExhlast                                   { get; set; } // Bit
		[Column("dual_evenodd"),                                   Identity] public bool      DualEvenodd                                   { get; set; } // Bit
		[Column("strict_evenodd"),                                 Identity] public bool      StrictEvenodd                                 { get; set; } // Bit
		[Column("Team_evenlanes"),                                 Nullable] public int?      TeamEvenlanes                                 { get; set; } // Long
		[Column("Team_oddlanes"),                                  Nullable] public int?      TeamOddlanes                                  { get; set; } // Long
		[Column("masters_bytimeonly"),                             Identity] public bool      MastersBytimeonly                             { get; set; } // Bit
		[Column("masters_agegrpsskip"),                            Nullable] public short?    MastersAgegrpsskip                            { get; set; } // Short
		[Column("timer_port"),                                     Nullable] public short?    TimerPort                                     { get; set; } // Short
		[Column("scbd_port"),                                      Nullable] public short?    ScbdPort                                      { get; set; } // Short
		[Column("timer_vendor"),                                   Nullable] public string    TimerVendor                                   { get; set; } // text(4)
		[Column("scbd_vendor"),                                    Nullable] public string    ScbdVendor                                    { get; set; } // text(4)
		[Column("show_initial"),                                   Identity] public bool      ShowInitial                                   { get; set; } // Bit
		[Column("ucase_names"),                                    Identity] public bool      UcaseNames                                    { get; set; } // Bit
		[Column("ucase_Teams"),                                    Identity] public bool      UcaseTeams                                    { get; set; } // Bit
		[Column("open_senior_none"),                               Nullable] public char?     OpenSeniorNone                                { get; set; } // text(1)
		[Column("entryqual_faster"),                               Identity] public bool      EntryqualFaster                               { get; set; } // Bit
		[Column("Facility_Surcharge"),                             Nullable] public decimal?  FacilitySurcharge                             { get; set; } // Currency
		[Column("anyone_onrelay"),                                 Identity] public bool      AnyoneOnrelay                                 { get; set; } // Bit
		[Column("language_choice"),                                Nullable] public string    LanguageChoice                                { get; set; } // text(20)
		[Column("military_time"),                                  Identity] public bool      MilitaryTime                                  { get; set; } // Bit
		[Column("check_times"),                                    Identity] public bool      CheckTimes                                    { get; set; } // Bit
		[Column("enterkey_astab"),                                 Identity] public bool      EnterkeyAstab                                 { get; set; } // Bit
		[Column("double_endedsplits"),                             Identity] public bool      DoubleEndedsplits                             { get; set; } // Bit
		[Column("use_compnumbers"),                                Identity] public bool      UseCompnumbers                                { get; set; } // Bit
		[Column("flighted_minentries"),                            Nullable] public short?    FlightedMinentries                            { get; set; } // Short
		[Column("diffpts_malefemale"),                             Identity] public bool      DiffptsMalefemale                             { get; set; } // Bit
		[Column("diffpts_eachdivision"),                           Identity] public bool      DiffptsEachdivision                           { get; set; } // Bit
		[Column("scoreonly_ifexceedqualtime"),                     Identity] public bool      ScoreonlyIfexceedqualtime                     { get; set; } // Bit
		[Column("score_fastestheatonly"),                          Identity] public bool      ScoreFastestheatonly                          { get; set; } // Bit
		[Column("entrylimits_warn"),                               Identity] public bool      EntrylimitsWarn                               { get; set; } // Bit
		[Column("pointsbasedon_seedtime"),                         Identity] public bool      PointsbasedonSeedtime                         { get; set; } // Bit
		[Column("pointsfor_overachievers"),                        Identity] public bool      PointsforOverachievers                        { get; set; } // Bit
		[Column("pointsfor_underachievers"),                       Identity] public bool      PointsforUnderachievers                       { get; set; } // Bit
		[Column("indmaxscorers_perTeam"),                          Nullable] public short?    IndmaxscorersPerTeam                          { get; set; } // Short
		[Column("relmaxscorers_perTeam"),                          Nullable] public short?    RelmaxscorersPerTeam                          { get; set; } // Short
		[Column("indtopmany_awards"),                              Nullable] public short?    IndtopmanyAwards                              { get; set; } // Short
		[Column("reltopmany_awards"),                              Nullable] public short?    ReltopmanyAwards                              { get; set; } // Short
		[Column("entrymax_total"),                                 Nullable] public short?    EntrymaxTotal                                 { get; set; } // Short
		[Column("indmax_perath"),                                  Nullable] public short?    IndmaxPerath                                  { get; set; } // Short
		[Column("relmax_perath"),                                  Nullable] public short?    RelmaxPerath                                  { get; set; } // Short
		[Column("foreign_getTeampoints"),                          Identity] public bool      ForeignGetTeampoints                          { get; set; } // Bit
		[Column("include_swimupsinTeamscore"),                     Identity] public bool      IncludeSwimupsinTeamscore                     { get; set; } // Bit
		[Column("enter_citizenof"),                                Identity] public bool      EnterCitizenof                                { get; set; } // Bit
		[Column("meet_meetstyle"),                                 Nullable] public short?    MeetMeetstyle                                 { get; set; } // Short
		[Column("flag_overachievers"),                             Identity] public bool      FlagOverachievers                             { get; set; } // Bit
		[Column("flag_underachievers"),                            Identity] public bool      FlagUnderachievers                            { get; set; } // Bit
		[Column("scbd_punctuation"),                               Nullable] public short?    ScbdPunctuation                               { get; set; } // Short
		[Column("scbd_names"),                                     Nullable] public short?    ScbdNames                                     { get; set; } // Short
		[Column("scbd_relaynames"),                                Nullable] public short?    ScbdRelaynames                                { get; set; } // Short
		[Column("scbd_cycle"),                                     Identity] public bool      ScbdCycle                                     { get; set; } // Bit
		[Column("scbd_cycleseconds"),                              Nullable] public short?    ScbdCycleseconds                              { get; set; } // Short
		[Column("copies_toprinter"),                               Nullable] public short?    CopiesToprinter                               { get; set; } // Short
		[Column("report_headersonly"),                             Identity] public bool      ReportHeadersonly                             { get; set; } // Bit
		[Column("autoinc_compno"),                                 Identity] public bool      AutoincCompno                                 { get; set; } // Bit
		[Column("pentscoring_usedqtime"),                          Identity] public bool      PentscoringUsedqtime                          { get; set; } // Bit
		[Column("swimmer_surcharge"),                              Nullable] public decimal?  SwimmerSurcharge                              { get; set; } // Currency
		[Column("directly_toprinter"),                             Identity] public bool      DirectlyToprinter                             { get; set; } // Bit
		[Column("lastname_asinitial"),                             Identity] public bool      LastnameAsinitial                             { get; set; } // Bit
		[Column("under_eventname"),                                Identity] public bool      UnderEventname                                { get; set; } // Bit
		[Column("suppress_Arelay"),                                Identity] public bool      SuppressArelay                                { get; set; } // Bit
		[Column("Punct_recholders"),                               Identity] public bool      PunctRecholders                               { get; set; } // Bit
		[Column("ucase_recholders"),                               Identity] public bool      UcaseRecholders                               { get; set; } // Bit
		[Column("suppress_lsc"),                                   Identity] public bool      SuppressLsc                                   { get; set; } // Bit
		[Column("showathlete_status"),                             Identity] public bool      ShowathleteStatus                             { get; set; } // Bit
		[Column("open_lowage"),                                    Nullable] public short?    OpenLowage                                    { get; set; } // Short
		[Column("useeventsex_Teamscore"),                          Identity] public bool      UseeventsexTeamscore                          { get; set; } // Bit
		[Column("suppress_smallx"),                                Identity] public bool      SuppressSmallx                                { get; set; } // Bit
		[Column("score_Arelayonly"),                               Identity] public bool      ScoreArelayonly                               { get; set; } // Bit
		[Column("thirteenandover_assenior"),                       Identity] public bool      ThirteenandoverAssenior                       { get; set; } // Bit
		[Column("suppress_jd"),                                    Identity] public bool      SuppressJd                                    { get; set; } // Bit
		[Column("abcfinal_order"),                                 Nullable] public string    AbcfinalOrder                                 { get; set; } // text(3)
		[Column("maxagefor_cfinal"),                               Nullable] public short?    MaxageforCfinal                               { get; set; } // Short
		[Column("Sanction_number"),                                Nullable] public string    SanctionNumber                                { get; set; } // text(30)
		[Column("include_sanction"),                               Identity] public bool      IncludeSanction                               { get; set; } // Bit
		[Column("special_points"),                                 Nullable] public short?    SpecialPoints                                 { get; set; } // Short
		[Column("countrelay_alt"),                                 Identity] public bool      CountrelayAlt                                 { get; set; } // Bit
		[Column("UseNonConforming_PoolFactor"),                    Identity] public bool      UseNonConformingPoolFactor                    { get; set; } // Bit
		[Column("NonConforming_PoolFactor"),                       Nullable] public float?    NonConformingPoolFactor                       { get; set; } // Single
		[Column("apnews_Team"),                                    Nullable] public char?     ApnewsTeam                                    { get; set; } // text(1)
		[Column("PointsAwarded_ForDQ"),                            Nullable] public float?    PointsAwardedForDQ                            { get; set; } // Single
		[Column("PointsAwarded_ForScratch"),                       Nullable] public float?    PointsAwardedForScratch                       { get; set; } // Single
		[Column("PointsAwarded_ForNT"),                            Nullable] public float?    PointsAwardedForNT                            { get; set; } // Single
		[Column("Enter_AthStat"),                                  Identity] public bool      EnterAthStat                                  { get; set; } // Bit
		[Column("Show_secondclub"),                                Identity] public bool      ShowSecondclub                                { get; set; } // Bit
		[Column("firstinitial_fulllastname"),                      Identity] public bool      FirstinitialFulllastname                      { get; set; } // Bit
		[Column("turnon_autobackup"),                              Identity] public bool      TurnonAutobackup                              { get; set; } // Bit
		[Column("autobackup_interval"),                            Nullable] public short?    AutobackupInterval                            { get; set; } // Short
		[Column("PointsAwarded_ForExh"),                           Identity] public bool      PointsAwardedForExh                           { get; set; } // Bit
		[Column("Use_AltTeamAbbr"),                                Identity] public bool      UseAltTeamAbbr                                { get; set; } // Bit
		[Column("IsCanadian_Masters"),                             Identity] public bool      IsCanadianMasters                             { get; set; } // Bit
		[Column("entry_msg"),                                      Nullable] public string    EntryMsg                                      { get; set; } // text(80)
		[Column("timedfinalnonconform_last"),                      Identity] public bool      TimedfinalnonconformLast                      { get; set; } // Bit
		[Column("referee_name"),                                   Nullable] public string    RefereeName                                   { get; set; } // text(30)
		[Column("referee_homphone"),                               Nullable] public string    RefereeHomphone                               { get; set; } // text(20)
		[Column("referee_offphone"),                               Nullable] public string    RefereeOffphone                               { get; set; } // text(20)
		[Column("Meet_altitude"),                                  Nullable] public int?      MeetAltitude                                  { get; set; } // Long
		[Column("Import_Dir"),                                     Nullable] public string    ImportDir                                     { get; set; } // text(80)
		[Column("Export_Dir"),                                     Nullable] public string    ExportDir                                     { get; set; } // text(80)
		[Column("Backup_Dir"),                                     Nullable] public string    BackupDir                                     { get; set; } // text(80)
		[Column("RestoreFrom_Dir"),                                Nullable] public string    RestoreFromDir                                { get; set; } // text(80)
		[Column("RestoreTo_Dir"),                                  Nullable] public string    RestoreToDir                                  { get; set; } // text(80)
		[Column("FlatHtml_Dir"),                                   Nullable] public string    FlatHtmlDir                                   { get; set; } // text(80)
		[Column("APNews_Dir"),                                     Nullable] public string    APNewsDir                                     { get; set; } // text(80)
		[Column("AllowSameEvent_DupRelayNames"),                   Identity] public bool      AllowSameEventDupRelayNames                   { get; set; } // Bit
		[Column("dualTeam_lane1"),                                 Nullable] public int?      DualTeamLane1                                 { get; set; } // Long
		[Column("dualTeam_lane2"),                                 Nullable] public int?      DualTeamLane2                                 { get; set; } // Long
		[Column("dualTeam_lane3"),                                 Nullable] public int?      DualTeamLane3                                 { get; set; } // Long
		[Column("dualTeam_lane4"),                                 Nullable] public int?      DualTeamLane4                                 { get; set; } // Long
		[Column("dualTeam_lane5"),                                 Nullable] public int?      DualTeamLane5                                 { get; set; } // Long
		[Column("dualTeam_lane6"),                                 Nullable] public int?      DualTeamLane6                                 { get; set; } // Long
		[Column("dualTeam_lane7"),                                 Nullable] public int?      DualTeamLane7                                 { get; set; } // Long
		[Column("dualTeam_lane8"),                                 Nullable] public int?      DualTeamLane8                                 { get; set; } // Long
		[Column("dualTeam_lane9"),                                 Nullable] public int?      DualTeamLane9                                 { get; set; } // Long
		[Column("dualTeam_lane10"),                                Nullable] public int?      DualTeamLane10                                { get; set; } // Long
		[Column("strict_evenoddfastestheatonly"),                  Identity] public bool      StrictEvenoddfastestheatonly                  { get; set; } // Bit
		[Column("dualseeding_altunusedlane"),                      Identity] public bool      DualseedingAltunusedlane                      { get; set; } // Bit
		[Column("Team_surcharge"),                                 Nullable] public decimal?  TeamSurcharge                                 { get; set; } // Currency
		[Column("Display_ActualEntryTime"),                        Identity] public bool      DisplayActualEntryTime                        { get; set; } // Bit
		[Column("indmaxadvance_perTeam"),                          Nullable] public short?    IndmaxadvancePerTeam                          { get; set; } // Short
		[Column("relmaxadvance_perTeam"),                          Nullable] public short?    RelmaxadvancePerTeam                          { get; set; } // Short
		[Column("RelayNames_LinkByLSC"),                           Identity] public bool      RelayNamesLinkByLSC                           { get; set; } // Bit
		[Column("Read_Only"),                                      Identity] public bool      ReadOnly                                      { get; set; } // Bit
		[Column("Flighted_BasedOnResultsTime"),                    Identity] public bool      FlightedBasedOnResultsTime                    { get; set; } // Bit
		[Column("ShowYear_InPlaceOfAge"),                          Identity] public bool      ShowYearInPlaceOfAge                          { get; set; } // Bit
		[Column("PenaltyPts_ForNS"),                               Nullable] public float?    PenaltyPtsForNS                               { get; set; } // Single
		[Column("EntryEligibility_date"),                          Nullable] public DateTime? EntryEligibilityDate                          { get; set; } // DateTime
		[Column("Suppress_TimeStdAbbr"),                           Identity] public bool      SuppressTimeStdAbbr                           { get; set; } // Bit
		[Column("masters_indlowage"),                              Nullable] public short?    MastersIndlowage                              { get; set; } // Short
		[Column("masters_rellowage"),                              Nullable] public short?    MastersRellowage                              { get; set; } // Short
		[Column("Custom_QualTimes"),                               Identity] public bool      CustomQualTimes                               { get; set; } // Bit
		[Column("Suppress_SplitsForDQs"),                          Identity] public bool      SuppressSplitsForDQs                          { get; set; } // Bit
		[Column("Suppress_SplitsForDQsRelay"),                     Identity] public bool      SuppressSplitsForDQsRelay                     { get; set; } // Bit
		[Column("DQCodes_Type"),                                   Nullable] public char?     DQCodesType                                   { get; set; } // text(1)
		[Column("SuppressTimes_NotMeetQualTime"),                  Identity] public bool      SuppressTimesNotMeetQualTime                  { get; set; } // Bit
		[Column("Show_AgeandBirthYear"),                           Identity] public bool      ShowAgeandBirthYear                           { get; set; } // Bit
		[Column("Meet_state"),                                     Nullable] public string    MeetState                                     { get; set; } // text(3)
		[Column("Meet_country"),                                   Nullable] public string    MeetCountry                                   { get; set; } // text(3)
		[Column("Meet_lsc"),                                       Nullable] public string    MeetLsc                                       { get; set; } // text(3)
		[Column("BCSSA_DivbyTimeStd"),                             Identity] public bool      BcssaDivbyTimeStd                             { get; set; } // Bit
		[Column("Show_HyTekDecimals"),                             Identity] public bool      ShowHyTekDecimals                             { get; set; } // Bit
		[Column("Suppress_ResultsAdvQ"),                           Identity] public bool      SuppressResultsAdvQ                           { get; set; } // Bit
		[Column("RelaysAs_4x100Style"),                            Identity] public bool      RelaysAs4x100Style                            { get; set; } // Bit
		[Column("flighted_flightcount"),                           Nullable] public short?    FlightedFlightcount                           { get; set; } // Short
		[Column("flighted_inclDQ"),                                Identity] public bool      FlightedInclDQ                                { get; set; } // Bit
		[Column("RelaysAlternate_TwoFastestFirst"),                Identity] public bool      RelaysAlternateTwoFastestFirst                { get; set; } // Bit
		[Column("dualTeam_lane11"),                                Nullable] public int?      DualTeamLane11                                { get; set; } // Long
		[Column("dualTeam_lane12"),                                Nullable] public int?      DualTeamLane12                                { get; set; } // Long
		[Column("entry_deadline"),                                 Nullable] public DateTime? EntryDeadline                                 { get; set; } // DateTime
		[Column("Meet_addr1"),                                     Nullable] public string    MeetAddr1                                     { get; set; } // text(30)
		[Column("Meet_addr2"),                                     Nullable] public string    MeetAddr2                                     { get; set; } // text(30)
		[Column("Meet_city"),                                      Nullable] public string    MeetCity                                      { get; set; } // text(30)
		[Column("Meet_zip"),                                       Nullable] public string    MeetZip                                       { get; set; } // text(10)
		[Column("Meet_hostlsc"),                                   Nullable] public string    MeetHostlsc                                   { get; set; } // text(3)
		[Column("Meet_USMastersMeetID"),                           Nullable] public string    MeetUSMastersMeetID                           { get; set; } // text(20)
		[Column("ShowFirstName_OverPreferred"),                    Identity] public bool      ShowFirstNameOverPreferred                    { get; set; } // Bit
		[Column("ExcludeNTEntries_WhenImporting"),                 Identity] public bool      ExcludeNTEntriesWhenImporting                 { get; set; } // Bit
		[Column("Enter_birthcentury"),                             Identity] public bool      EnterBirthcentury                             { get; set; } // Bit
		[Column("Using_twopools"),                                 Identity] public bool      UsingTwopools                                 { get; set; } // Bit
		[Column("Pool1_name"),                                     Nullable] public string    Pool1Name                                     { get; set; } // text(30)
		[Column("Pool2_name"),                                     Nullable] public string    Pool2Name                                     { get; set; } // text(30)
		[Column("indtopmany_awardsSr"),                            Nullable] public short?    IndtopmanyAwardsSr                            { get; set; } // Short
		[Column("reltopmany_awardsSr"),                            Nullable] public short?    ReltopmanyAwardsSr                            { get; set; } // Short
		[Column("maxforeign_infinal"),                             Nullable] public short?    MaxforeignInfinal                             { get; set; } // Short
		[Column("Flag_FastestRecordOnly"),                         Identity] public bool      FlagFastestRecordOnly                         { get; set; } // Bit
		[Column("athlete_earlysurcharge"),                         Nullable] public decimal?  AthleteEarlysurcharge                         { get; set; } // Currency
		[Column("athlete_latesurcharge"),                          Nullable] public decimal?  AthleteLatesurcharge                          { get; set; } // Currency
		[Column("athlete_earlysurchargedate"),                     Nullable] public DateTime? AthleteEarlysurchargedate                     { get; set; } // DateTime
		[Column("athlete_latesurchargedate"),                      Nullable] public DateTime? AthleteLatesurchargedate                      { get; set; } // DateTime
		[Column("entry_OpenDate"),                                 Nullable] public DateTime? EntryOpenDate                                 { get; set; } // DateTime
		[Column("DisplayNTfor_TimesUnder5Sec"),                    Identity] public bool      DisplayNTforTimesUnder5Sec                    { get; set; } // Bit
		[Column("SortTeamCombos_ByTeamName"),                      Identity] public bool      SortTeamCombosByTeamName                      { get; set; } // Bit
		[Column("FastestHeat_SomeLanesDoNotScore"),                Identity] public bool      FastestHeatSomeLanesDoNotScore                { get; set; } // Bit
		[Column("RankDisabled_ByPoints"),                          Identity] public bool      RankDisabledByPoints                          { get; set; } // Bit
		[Column("special_parapoints"),                             Nullable] public short?    SpecialParapoints                             { get; set; } // Short
		[Column("DisabledDoNot_AdvanceToFinals"),                  Identity] public bool      DisabledDoNotAdvanceToFinals                  { get; set; } // Bit
		[Column("prelimheats_circledist"),                         Nullable] public short?    PrelimheatsCircledist                         { get; set; } // Short
		[Column("DisabledIgnoreQualTime_ForScoring"),              Identity] public bool      DisabledIgnoreQualTimeForScoring              { get; set; } // Bit
		[Column("CountTimeTrial_Events"),                          Identity] public bool      CountTimeTrialEvents                          { get; set; } // Bit
		[Column("QualNonConformCourse_UseMinStd"),                 Identity] public bool      QualNonConformCourseUseMinStd                 { get; set; } // Bit
		[Column("Last_updated"),                                   Nullable] public string    LastUpdated                                   { get; set; } // text(40)
		[Column("MixedRelays_DividedPoints"),                      Identity] public bool      MixedRelaysDividedPoints                      { get; set; } // Bit
		[Column("RelayOnly_Surcharge"),                            Nullable] public decimal?  RelayOnlySurcharge                            { get; set; } // Currency
		[Column("TimeAdj_Method"),                                 Nullable] public char?     TimeAdjMethod                                 { get; set; } // text(1)
		[Column("DisabledSeedWithAgeGroup_IfTimedFinalSuperSeed"), Identity] public bool      DisabledSeedWithAgeGroupIfTimedFinalSuperSeed { get; set; } // Bit
		[Column("Lock_Reseed"),                                    Identity] public bool      LockReseed                                    { get; set; } // Bit
		[Column("Competition_Code"),                               Nullable] public string    CompetitionCode                               { get; set; } // text(6)
	}

	[Table("MEETMOBILE2OPTIONS")]
	public partial class MEETMOBILE2OPTIONS
	{
		[Column(),                                  Nullable] public int?      MeetMobile2MeetID              { get; set; } // Long
		[Column(),                                  Nullable] public string    AgencyID                       { get; set; } // text(40)
		[Column("EV5_uploaded"),                    Identity] public bool      EV5Uploaded                    { get; set; } // Bit
		[Column("Heatpsych_uploaded"),              Identity] public bool      HeatpsychUploaded              { get; set; } // Bit
		[Column("Heatsheet_amount"),                Nullable] public float?    HeatsheetAmount                { get; set; } // Single
		[Column("Teamscoring_choice"),              Nullable] public short?    TeamscoringChoice              { get; set; } // Short
		[Column("Contract_agreed"),                 Identity] public bool      ContractAgreed                 { get; set; } // Bit
		[Column("DoNotShow_timeline"),              Identity] public bool      DoNotShowTimeline              { get; set; } // Bit
		[Column("HeatPsych_choice"),                Nullable] public short?    HeatPsychChoice                { get; set; } // Short
		[Column("Contract_PersonName"),             Nullable] public string    ContractPersonName             { get; set; } // text(40)
		[Column("Contract_PersonBirth"),            Nullable] public DateTime? ContractPersonBirth            { get; set; } // DateTime
		[Column(),                                  Nullable] public string    LastName                       { get; set; } // text(50)
		[Column(),                                  Nullable] public string    FirstName                      { get; set; } // text(50)
		[Column(),                                  Nullable] public string    Phone                          { get; set; } // text(20)
		[Column(),                                  Nullable] public string    EMail                          { get; set; } // text(50)
		[Column(),                                  Nullable] public string    TeamName                       { get; set; } // text(50)
		[Column(),                                  Nullable] public string    Addr                           { get; set; } // text(50)
		[Column(),                                  Nullable] public string    SecAddr                        { get; set; } // text(30)
		[Column(),                                  Nullable] public string    City                           { get; set; } // text(30)
		[Column(),                                  Nullable] public string    State                          { get; set; } // text(3)
		[Column(),                                  Nullable] public string    Zip                            { get; set; } // text(10)
		[Column(),                                  Nullable] public string    Cntry                          { get; set; } // text(3)
		[Column(),                                  Nullable] public string    TimeZone                       { get; set; } // text(50)
		[Column(),                                  Nullable] public string    PayTo                          { get; set; } // text(50)
		[Column(),                                  Nullable] public string    Classification                 { get; set; } // text(50)
		[Column(),                                  Nullable] public string    WebSite                        { get; set; } // text(50)
		[Column(),                                  Nullable] public string    Token                          { get; set; } // text(80)
		[Column(),                                  Nullable] public string    OMEWebSite                     { get; set; } // text(100)
		[Column(),                                  Nullable] public string    License                        { get; set; } // text(120)
		[Column(),                                  Identity] public bool      NoShowActiveComSetup           { get; set; } // Bit
		[Column("AnnounceEV5_uploaded"),            Identity] public bool      AnnounceEV5Uploaded            { get; set; } // Bit
		[Column("SharingEV5_uploaded"),             Identity] public bool      SharingEV5Uploaded             { get; set; } // Bit
		[Column(),                                  Nullable] public int?      FileSharingMeetID              { get; set; } // Long
		[Column(),                                  Identity] public bool      FileSharingEvtsOk              { get; set; } // Bit
		[Column(),                                  Identity] public bool      FileSharingPricingOk           { get; set; } // Bit
		[Column(),                                  Identity] public bool      FileSharingEntryLimitsOk       { get; set; } // Bit
		[Column(),                                  Identity] public bool      FileSharingQualTimesOk         { get; set; } // Bit
		[Column(),                                  Identity] public bool      FileSharingMeetSetupOk         { get; set; } // Bit
		[Column("NotInterestedIn_FileSharing"),     Identity] public bool      NotInterestedInFileSharing     { get; set; } // Bit
		[Column("DoNotShow_MeetSharingImportMsg"),  Identity] public bool      DoNotShowMeetSharingImportMsg  { get; set; } // Bit
		[Column("ResultsFile_uploaded"),            Identity] public bool      ResultsFileUploaded            { get; set; } // Bit
		[Column(),                                  Nullable] public int?      MeetResultsID                  { get; set; } // Long
		[Column("NotInterestedIn_MeetMobile"),      Identity] public bool      NotInterestedInMeetMobile      { get; set; } // Bit
		[Column("Contract_agreedMeetSharing"),      Identity] public bool      ContractAgreedMeetSharing      { get; set; } // Bit
		[Column("Contract_PersonNameMeetSharing"),  Nullable] public string    ContractPersonNameMeetSharing  { get; set; } // text(40)
		[Column("Contract_PersonBirthMeetSharing"), Nullable] public DateTime? ContractPersonBirthMeetSharing { get; set; } // DateTime
		[Column("HeatSheetsAre_Free"),              Identity] public bool      HeatSheetsAreFree              { get; set; } // Bit
	}

	[Table("MemorizedReports")]
	public partial class MemorizedReport
	{
		[Column("Mem_Name"),                       Nullable            ] public string MemName                       { get; set; } // text(40)
		[Column("Mem_Type"),                       Nullable            ] public short? MemType                       { get; set; } // Short
		[Column("Mem_Ptr"),                        PrimaryKey, Identity] public int    MemPtr                        { get; set; } // Long
		[Column("Num_Columns"),                    Nullable            ] public short? NumColumns                    { get; set; } // Short
		[Column("Sort_Order"),                     Nullable            ] public short? SortOrder                     { get; set; } // Short
		[Column("Date_Time"),                      Nullable            ] public short? DateTime                      { get; set; } // Short
		[Column("ID_Type"),                        Nullable            ] public short? IdType                        { get; set; } // Short
		[Column("Top_HowMany"),                    Nullable            ] public short? TopHowMany                    { get; set; } // Short
		[Column("Num_RelayNames"),                 Nullable            ] public short? NumRelayNames                 { get; set; } // Short
		[Column("Show_StartTimes"),                            Identity] public bool   ShowStartTimes                { get; set; } // Bit
		[Column("Incl_Records"),                               Identity] public bool   InclRecords                   { get; set; } // Bit
		[Column("Incl_TimeStds"),                              Identity] public bool   InclTimeStds                  { get; set; } // Bit
		[Column("Incl_QualTimes"),                             Identity] public bool   InclQualTimes                 { get; set; } // Bit
		[Column("Incl_EvtComments"),                           Identity] public bool   InclEvtComments               { get; set; } // Bit
		[Column("Line_ForResults"),                            Identity] public bool   LineForResults                { get; set; } // Bit
		[Column("Incl_NoEntries"),                             Identity] public bool   InclNoEntries                 { get; set; } // Bit
		[Column("Incl_PriorResults"),                          Identity] public bool   InclPriorResults              { get; set; } // Bit
		[Column("Incl_Rnd1Alt"),                               Identity] public bool   InclRnd1Alt                   { get; set; } // Bit
		[Column("Incl_EmptyLanes"),                            Identity] public bool   InclEmptyLanes                { get; set; } // Bit
		[Column("Show_SeedTimes"),                             Identity] public bool   ShowSeedTimes                 { get; set; } // Bit
		[Column("Sep_ABFinal"),                                Identity] public bool   SepABFinal                    { get; set; } // Bit
		[Column("OneEvent_PerPage"),                           Identity] public bool   OneEventPerPage               { get; set; } // Bit
		[Column("Ref_Format"),                                 Identity] public bool   RefFormat                     { get; set; } // Bit
		[Column("OneHeat_PerPage"),                            Identity] public bool   OneHeatPerPage                { get; set; } // Bit
		[Column("Dbl_Space"),                                  Identity] public bool   DblSpace                      { get; set; } // Bit
		[Column("Show_Ranks"),                                 Identity] public bool   ShowRanks                     { get; set; } // Bit
		[Column("MultiAge_Split"),                             Identity] public bool   MultiAgeSplit                 { get; set; } // Bit
		[Column("Incl_QualifiedAlts"),                         Identity] public bool   InclQualifiedAlts             { get; set; } // Bit
		[Column("ScrAltExhSpec_Filters"),          Nullable            ] public short? ScrAltExhSpecFilters          { get; set; } // Short
		[Column("Incl_Scratches"),                             Identity] public bool   InclScratches                 { get; set; } // Bit
		[Column("Ignore_Psych"),                               Identity] public bool   IgnorePsych                   { get; set; } // Bit
		[Column("Sess_Row"),                       Nullable            ] public int?   SessRow                       { get; set; } // Long
		[Column("Evt_Gender"),                     Nullable            ] public short? EvtGender                     { get; set; } // Short
		[Column("Evt_LowAge"),                     Nullable            ] public short? EvtLowAge                     { get; set; } // Short
		[Column("Evt_HighAge"),                    Nullable            ] public short? EvtHighAge                    { get; set; } // Short
		[Column("Team_Abbr"),                      Nullable            ] public string TeamAbbr                      { get; set; } // text(9)
		[Column("Evt_Round"),                      Nullable            ] public short? EvtRound                      { get; set; } // Short
		[Column("Evt_IndivOrRelay"),               Nullable            ] public short? EvtIndivOrRelay               { get; set; } // Short
		[Column("Report_Type"),                    Nullable            ] public short? ReportType                    { get; set; } // Short
		[Column("Sort_OrderAthAge"),               Nullable            ] public short? SortOrderAthAge               { get; set; } // Short
		[Column("Incl_AthNoEntries"),                          Identity] public bool   InclAthNoEntries              { get; set; } // Bit
		[Column("Incl_AthNoEntries4Col"),                      Identity] public bool   InclAthNoEntries4Col          { get; set; } // Bit
		[Column("AddApost_ClassYear"),                         Identity] public bool   AddApostClassYear             { get; set; } // Bit
		[Column("Incl_CompNo"),                                Identity] public bool   InclCompNo                    { get; set; } // Bit
		[Column("Incl_CompNo4Col"),                            Identity] public bool   InclCompNo4Col                { get; set; } // Bit
		[Column("AddrSort_ByTeam"),                            Identity] public bool   AddrSortByTeam                { get; set; } // Bit
		[Column("AddrSort_ByZip"),                             Identity] public bool   AddrSortByZip                 { get; set; } // Bit
		[Column("Incl_ScrInEntryCount"),                       Identity] public bool   InclScrInEntryCount           { get; set; } // Bit
		[Column("Incl_AltInEntryCount"),                       Identity] public bool   InclAltInEntryCount           { get; set; } // Bit
		[Column("Incl_BirthDate"),                             Identity] public bool   InclBirthDate                 { get; set; } // Bit
		[Column("Incl_TeamAddr"),                              Identity] public bool   InclTeamAddr                  { get; set; } // Bit
		[Column("Incl_Coaches"),                               Identity] public bool   InclCoaches                   { get; set; } // Bit
		[Column("AthUseAbbr_ForTeam"),                         Identity] public bool   AthUseAbbrForTeam             { get; set; } // Bit
		[Column("Div_Abbr"),                       Nullable            ] public string DivAbbr                       { get; set; } // text(30)
		[Column("Report_Format"),                  Nullable            ] public short? ReportFormat                  { get; set; } // Short
		[Column("Incl_HeatLane"),                              Identity] public bool   InclHeatLane                  { get; set; } // Bit
		[Column("Add_LineSpace"),                              Identity] public bool   AddLineSpace                  { get; set; } // Bit
		[Column("Incl_RegID"),                                 Identity] public bool   InclRegID                     { get; set; } // Bit
		[Column("Show_CheckIn"),                               Identity] public bool   ShowCheckIn                   { get; set; } // Bit
		[Column("NumAth_PerPage"),                 Nullable            ] public short? NumAthPerPage                 { get; set; } // Short
		[Column("Splits_Choice"),                  Nullable            ] public short? SplitsChoice                  { get; set; } // Short
		[Column("Results_ByHeat"),                             Identity] public bool   ResultsByHeat                 { get; set; } // Bit
		[Column("Page_Break"),                                 Identity] public bool   PageBreak                     { get; set; } // Bit
		[Column("Incl_SpecPts"),                               Identity] public bool   InclSpecPts                   { get; set; } // Bit
		[Column("Incl_TimeTrials"),                            Identity] public bool   InclTimeTrials                { get; set; } // Bit
		[Column("Incl_NoShows"),                               Identity] public bool   InclNoShows                   { get; set; } // Bit
		[Column("Incl_TeamPts"),                               Identity] public bool   InclTeamPts                   { get; set; } // Bit
		[Column("Low_Lane"),                       Nullable            ] public short? LowLane                       { get; set; } // Short
		[Column("High_Lane"),                      Nullable            ] public short? HighLane                      { get; set; } // Short
		[Column("Score_Female"),                               Identity] public bool   ScoreFemale                   { get; set; } // Bit
		[Column("Score_Male"),                                 Identity] public bool   ScoreMale                     { get; set; } // Bit
		[Column("Score_Combined"),                             Identity] public bool   ScoreCombined                 { get; set; } // Bit
		[Column("Score_CombinedBoth"),                         Identity] public bool   ScoreCombinedBoth             { get; set; } // Bit
		[Column("BAG_CATS"),                                   Identity] public bool   BagCats                       { get; set; } // Bit
		[Column("Flat_HTML"),                                  Identity] public bool   FlatHtml                      { get; set; } // Bit
		[Column("DotMatrix_LabelChoice"),          Nullable            ] public string DotMatrixLabelChoice          { get; set; } // text(40)
		[Column("Laser_LabelChoice"),              Nullable            ] public string LaserLabelChoice              { get; set; } // text(40)
		[Column("Incl_TeamScore"),                             Identity] public bool   InclTeamScore                 { get; set; } // Bit
		[Column("Incl_FemaleTeamScore"),                       Identity] public bool   InclFemaleTeamScore           { get; set; } // Bit
		[Column("Incl_MaleTeamScore"),                         Identity] public bool   InclMaleTeamScore             { get; set; } // Bit
		[Column("CombineDivisions_ForTeamPoints"),             Identity] public bool   CombineDivisionsForTeamPoints { get; set; } // Bit
		[Column("Incl_DQCodes"),                               Identity] public bool   InclDQCodes                   { get; set; } // Bit
		[Column("Incl_ReactionTimes"),                         Identity] public bool   InclReactionTimes             { get; set; } // Bit
		[Column("Incl_Backups"),                               Identity] public bool   InclBackups                   { get; set; } // Bit
		[Column("UseLaser_Label"),                 Nullable            ] public short? UseLaserLabel                 { get; set; } // Short
		[Column("UseDQTimesfor_CombinedEvents"),               Identity] public bool   UseDQTimesforCombinedEvents   { get; set; } // Bit
		[Column("Incl_EntryTimes"),                            Identity] public bool   InclEntryTimes                { get; set; } // Bit
		[Column("Incl_PriorResultsSplits"),                    Identity] public bool   InclPriorResultsSplits        { get; set; } // Bit
		[Column("Incl_LogosinFooter"),                         Identity] public bool   InclLogosinFooter             { get; set; } // Bit
		[Column("LaneTimer_Pads"),                             Identity] public bool   LaneTimerPads                 { get; set; } // Bit
		[Column("UseBestTimes_AllRounds"),                     Identity] public bool   UseBestTimesAllRounds         { get; set; } // Bit
		[Column("Qual_Club"),                                  Identity] public bool   QualClub                      { get; set; } // Bit
		[Column("QualClub_Scorers"),                           Identity] public bool   QualClubScorers               { get; set; } // Bit
		[Column("PtBreakOut_HighPt"),                          Identity] public bool   PtBreakOutHighPt              { get; set; } // Bit
		[Column("RTF_export"),                                 Identity] public bool   RtfExport                     { get; set; } // Bit
		[Column("Results_ByHeatInclLane"),                     Identity] public bool   ResultsByHeatInclLane         { get; set; } // Bit
		[Column("NoShows_Only"),                               Identity] public bool   NoShowsOnly                   { get; set; } // Bit
		[Column("Scratches_Only"),                             Identity] public bool   ScratchesOnly                 { get; set; } // Bit
		[Column("DQs_Only"),                                   Identity] public bool   DQsOnly                       { get; set; } // Bit
		[Column("Combined_BothMustScore"),                     Identity] public bool   CombinedBothMustScore         { get; set; } // Bit
	}

	[Table("Multiage")]
	public partial class Multiage
	{
		[Column("event_ptr"),        Nullable] public int?   EventPtr        { get; set; } // Long
		[Column("low_age"),          Nullable] public short? LowAge          { get; set; } // Short
		[Column("high_age"),         Nullable] public short? HighAge         { get; set; } // Short
		[Column("Heats_infinal"),    Nullable] public char?  HeatsInfinal    { get; set; } // text(1)
		[Column("Num_Heatsinfinal"), Nullable] public short? NumHeatsinfinal { get; set; } // Short
	}

	[Table("MultiageScnd")]
	public partial class MultiageScnd
	{
		[Column("event_ptr"), Nullable] public int?   EventPtr { get; set; } // Long
		[Column("low_age"),   Nullable] public short? LowAge   { get; set; } // Short
		[Column("high_age"),  Nullable] public short? HighAge  { get; set; } // Short
	}

	[Table("Officials")]
	public partial class Official
	{
		[Column("Official_no"), Identity] public int    OfficialNo { get; set; } // Long
		[Column("Last_name"),   Nullable] public string LastName   { get; set; } // text(20)
		[Column("First_name"),  Nullable] public string FirstName  { get; set; } // text(20)
		[Column(),              Nullable] public char?  Initial    { get; set; } // text(1)
		[Column("Pref_name"),   Nullable] public string PrefName   { get; set; } // text(20)
		[Column("Home_email"),  Nullable] public string HomeEmail  { get; set; } // text(50)
	}

	[Table("OMEOPTIONS")]
	public partial class OMEOPTION
	{
		[Column(),               Nullable] public byte?  OMEEntryStyle        { get; set; } // Byte
		[Column(),               Nullable] public byte?  OMEReviewTime        { get; set; } // Byte
		[Column(),               Nullable] public string EMailFrom            { get; set; } // text(50)
		[Column(),               Nullable] public string EMailSubject         { get; set; } // text(100)
		[Column(),               Nullable] public string EMailText            { get; set; } // text(254)
		[Column(),               Nullable] public string LastName             { get; set; } // text(50)
		[Column(),               Nullable] public string FirstName            { get; set; } // text(50)
		[Column(),               Nullable] public string Phone                { get; set; } // text(20)
		[Column(),               Nullable] public string EMail                { get; set; } // text(50)
		[Column(),               Nullable] public string TeamName             { get; set; } // text(50)
		[Column(),               Nullable] public string Addr                 { get; set; } // text(50)
		[Column(),               Nullable] public string SecAddr              { get; set; } // text(30)
		[Column(),               Nullable] public string City                 { get; set; } // text(30)
		[Column(),               Nullable] public string State                { get; set; } // text(3)
		[Column(),               Nullable] public string Zip                  { get; set; } // text(10)
		[Column(),               Nullable] public string Cntry                { get; set; } // text(3)
		[Column(),               Nullable] public string TimeZone             { get; set; } // text(50)
		[Column(),               Nullable] public string PayTo                { get; set; } // text(50)
		[Column(),               Nullable] public string Classification       { get; set; } // text(50)
		[Column(),               Nullable] public string WebSite              { get; set; } // text(50)
		[Column(),               Identity] public bool   NoShowMeetList       { get; set; } // Bit
		[Column(),               Identity] public bool   NoShowMeetSetup      { get; set; } // Bit
		[Column(),               Identity] public bool   NoShowActiveComSetup { get; set; } // Bit
		[Column(),               Nullable] public string Token                { get; set; } // text(80)
		[Column(),               Nullable] public string OMEWebSite           { get; set; } // text(100)
		[Column(),               Nullable] public string AgencyID             { get; set; } // text(40)
		[Column(),               Nullable] public string License              { get; set; } // text(120)
		[Column(),               Nullable] public int?   ActiveMeetID         { get; set; } // Long
		[Column("EV4_uploaded"), Identity] public bool   EV4Uploaded          { get; set; } // Bit
	}

	[Table("Records")]
	public partial class Record
	{
		[Column("tag_ptr"),           Nullable] public int?   TagPtr           { get; set; } // Long
		[Column("tag_gender"),        Nullable] public char?  TagGender        { get; set; } // text(1)
		[Column("tag_indrel"),        Nullable] public char?  TagIndrel        { get; set; } // text(1)
		[Column("tag_dist"),          Nullable] public int?   TagDist          { get; set; } // Long
		[Column("tag_stroke"),        Nullable] public char?  TagStroke        { get; set; } // text(1)
		[Column("low_age"),           Nullable] public short? LowAge           { get; set; } // Short
		[Column("high_Age"),          Nullable] public short? HighAge          { get; set; } // Short
		[Column("Record_month"),      Nullable] public short? RecordMonth      { get; set; } // Short
		[Column("Record_day"),        Nullable] public short? RecordDay        { get; set; } // Short
		[Column("Record_year"),       Nullable] public short? RecordYear       { get; set; } // Short
		[Column("Record_Holder"),     Nullable] public string RecordHolder     { get; set; } // text(30)
		[Column("Record_HolderTeam"), Nullable] public string RecordHolderTeam { get; set; } // text(16)
		[Column("Relay_Names"),       Nullable] public string RelayNames       { get; set; } // text(50)
		[Column("Record_Time"),       Nullable] public float? RecordTime       { get; set; } // Single
		[Column("Record_course"),     Nullable] public char?  RecordCourse     { get; set; } // text(1)
		[Column("div_abbr"),          Nullable] public string DivAbbr          { get; set; } // text(10)
		[Column("Record_Teamabbr"),   Nullable] public string RecordTeamabbr   { get; set; } // text(5)
		[Column("Record_Teamlsc"),    Nullable] public string RecordTeamlsc    { get; set; } // text(2)
	}

	[Table("RecordsApp")]
	public partial class RecordsApp
	{
		[Column("timer_type"),      Nullable] public short? TimerType      { get; set; } // Short
		[Column("app_title"),       Nullable] public string AppTitle       { get; set; } // text(90)
		[Column("app_date"),        Nullable] public string AppDate        { get; set; } // text(11)
		[Column("sendto_name"),     Nullable] public string SendtoName     { get; set; } // text(40)
		[Column("sendto_address1"), Nullable] public string SendtoAddress1 { get; set; } // text(40)
		[Column("sendto_address2"), Nullable] public string SendtoAddress2 { get; set; } // text(40)
		[Column("sendto_city"),     Nullable] public string SendtoCity     { get; set; } // text(20)
		[Column("sendto_state"),    Nullable] public string SendtoState    { get; set; } // text(3)
		[Column("sendto_zip"),      Nullable] public string SendtoZip      { get; set; } // text(10)
		[Column("sendto_email"),    Nullable] public string SendtoEmail    { get; set; } // text(50)
		[Column("record_name"),     Nullable] public string RecordName     { get; set; } // text(12)
		[Column("app_topnote1"),    Nullable] public string AppTopnote1    { get; set; } // text(110)
		[Column("app_bottomnote1"), Nullable] public string AppBottomnote1 { get; set; } // text(110)
		[Column("app_topnote2"),    Nullable] public string AppTopnote2    { get; set; } // text(110)
		[Column("app_bottomnote2"), Nullable] public string AppBottomnote2 { get; set; } // text(110)
		[Column("app_topnote3"),    Nullable] public string AppTopnote3    { get; set; } // text(110)
		[Column("app_bottomnote3"), Nullable] public string AppBottomnote3 { get; set; } // text(110)
		[Column("app_topnote4"),    Nullable] public string AppTopnote4    { get; set; } // text(110)
		[Column("app_bottomnote4"), Nullable] public string AppBottomnote4 { get; set; } // text(110)
		[Column("referree_name"),   Nullable] public string ReferreeName   { get; set; } // text(40)
		[Column("adminref_name"),   Nullable] public string AdminrefName   { get; set; } // text(40)
	}

	[Table("RecordsbyEvent")]
	public partial class RecordsbyEvent
	{
		[Column("tag_ptr"),           Nullable] public int?   TagPtr           { get; set; } // Long
		[Column("event_ptr"),         Nullable] public int?   EventPtr         { get; set; } // Long
		[Column("low_age"),           Nullable] public short? LowAge           { get; set; } // Short
		[Column("high_Age"),          Nullable] public short? HighAge          { get; set; } // Short
		[Column("Record_month"),      Nullable] public short? RecordMonth      { get; set; } // Short
		[Column("Record_day"),        Nullable] public short? RecordDay        { get; set; } // Short
		[Column("Record_year"),       Nullable] public short? RecordYear       { get; set; } // Short
		[Column("Record_Holder"),     Nullable] public string RecordHolder     { get; set; } // text(30)
		[Column("Record_HolderTeam"), Nullable] public string RecordHolderTeam { get; set; } // text(16)
		[Column("Relay_Names"),       Nullable] public string RelayNames       { get; set; } // text(50)
		[Column("Record_Time"),       Nullable] public float? RecordTime       { get; set; } // Single
		[Column("Record_course"),     Nullable] public char?  RecordCourse     { get; set; } // text(1)
		[Column("tag_gender"),        Nullable] public char?  TagGender        { get; set; } // text(1)
		[Column("hide_me"),           Identity] public bool   HideMe           { get; set; } // Bit
		[Column("div_abbr"),          Nullable] public string DivAbbr          { get; set; } // text(10)
		[Column("Record_Teamabbr"),   Nullable] public string RecordTeamabbr   { get; set; } // text(5)
		[Column("Record_Teamlsc"),    Nullable] public string RecordTeamlsc    { get; set; } // text(2)
	}

	[Table("RecordTags")]
	public partial class RecordTag
	{
		[Column("tag_ptr"),         Identity] public int    TagPtr         { get; set; } // Long
		[Column("tag_order"),       Nullable] public short? TagOrder       { get; set; } // Short
		[Column("tag_name"),        Nullable] public string TagName        { get; set; } // text(12)
		[Column("tag_flag"),        Nullable] public char?  TagFlag        { get; set; } // text(1)
		[Column("Team_no"),         Nullable] public int?   TeamNo         { get; set; } // Long
		[Column("allow_exh"),       Identity] public bool   AllowExh       { get; set; } // Bit
		[Column("allow_foreigner"), Identity] public bool   AllowForeigner { get; set; } // Bit
		[Column("tag_lsc"),         Nullable] public string TagLsc         { get; set; } // text(3)
	}

	[Table("Regions")]
	public partial class Region
	{
		[Column("Reg_no"),        Nullable] public int?   RegNo        { get; set; } // Long
		[Column("Reg_abbr"),      Nullable] public string RegAbbr      { get; set; } // text(2)
		[Column("Reg_name"),      Nullable] public string RegName      { get; set; } // text(20)
		[Column("fem_size"),      Nullable] public short? FemSize      { get; set; } // Short
		[Column("male_size"),     Nullable] public short? MaleSize     { get; set; } // Short
		[Column("combined_size"), Nullable] public short? CombinedSize { get; set; } // Short
	}

	[Table("Relay")]
	public partial class Relay
	{
		[Column("Event_ptr"),         Nullable] public int?   EventPtr         { get; set; } // Long
		[Column("Relay_no"),          Identity] public int    RelayNo          { get; set; } // Long
		[Column("Team_no"),           Nullable] public int?   TeamNo           { get; set; } // Long
		[Column("Team_ltr"),          Nullable] public char?  TeamLtr          { get; set; } // text(1)
		[Column("Rel_age"),           Nullable] public short? RelAge           { get; set; } // Short
		[Column("Rel_sex"),           Nullable] public char?  RelSex           { get; set; } // text(1)
		[Column("ActSeed_course"),    Nullable] public char?  ActSeedCourse    { get; set; } // text(1)
		[Column("ActualSeed_time"),   Nullable] public float? ActualSeedTime   { get; set; } // Single
		[Column("ConvSeed_course"),   Nullable] public char?  ConvSeedCourse   { get; set; } // text(1)
		[Column("ConvSeed_time"),     Nullable] public float? ConvSeedTime     { get; set; } // Single
		[Column("Scr_stat"),          Identity] public bool   ScrStat          { get; set; } // Bit
		[Column("Spec_stat"),         Nullable] public char?  SpecStat         { get; set; } // text(1)
		[Column("Dec_stat"),          Nullable] public char?  DecStat          { get; set; } // text(1)
		[Column("Alt_stat"),          Identity] public bool   AltStat          { get; set; } // Bit
		[Column("Bonus_event"),       Identity] public bool   BonusEvent       { get; set; } // Bit
		[Column("Div_no"),            Nullable] public int?   DivNo            { get; set; } // Long
		[Column("Ev_score"),          Nullable] public float? EvScore          { get; set; } // Single
		[Column("JDEv_score"),        Nullable] public float? JDEvScore        { get; set; } // Single
		[Column("Seed_place"),        Nullable] public short? SeedPlace        { get; set; } // Short
		[Column("Pre_heat"),          Nullable] public short? PreHeat          { get; set; } // Short
		[Column("Pre_lane"),          Nullable] public short? PreLane          { get; set; } // Short
		[Column("Pre_stat"),          Nullable] public char?  PreStat          { get; set; } // text(1)
		[Column("Pre_Time"),          Nullable] public float? PreTime          { get; set; } // Single
		[Column("Pre_course"),        Nullable] public char?  PreCourse        { get; set; } // text(1)
		[Column("Pre_heatplace"),     Nullable] public short? PreHeatplace     { get; set; } // Short
		[Column("Pre_place"),         Nullable] public short? PrePlace         { get; set; } // Short
		[Column("Pre_jdplace"),       Nullable] public short? PreJdplace       { get; set; } // Short
		[Column("Pre_exh"),           Nullable] public char?  PreExh           { get; set; } // text(1)
		[Column("Pre_points"),        Nullable] public short? PrePoints        { get; set; } // Short
		[Column("Pre_back1"),         Nullable] public float? PreBack1         { get; set; } // Single
		[Column("Pre_back2"),         Nullable] public float? PreBack2         { get; set; } // Single
		[Column("Pre_back3"),         Nullable] public float? PreBack3         { get; set; } // Single
		[Column("Pre_watch1"),        Nullable] public float? PreWatch1        { get; set; } // Single
		[Column("Pre_pad"),           Nullable] public float? PrePad           { get; set; } // Single
		[Column("Pre_reactiontime1"), Nullable] public string PreReactiontime1 { get; set; } // text(5)
		[Column("Pre_dqcode"),        Nullable] public string PreDqcode        { get; set; } // text(2)
		[Column("Pre_dqcodeSecond"),  Nullable] public string PreDqcodeSecond  { get; set; } // text(2)
		[Column("Pre_TimeType"),      Nullable] public char?  PreTimeType      { get; set; } // text(1)
		[Column("Fin_heat"),          Nullable] public short? FinHeat          { get; set; } // Short
		[Column("Fin_lane"),          Nullable] public short? FinLane          { get; set; } // Short
		[Column("Fin_stat"),          Nullable] public char?  FinStat          { get; set; } // text(1)
		[Column("Fin_Time"),          Nullable] public float? FinTime          { get; set; } // Single
		[Column("Fin_course"),        Nullable] public char?  FinCourse        { get; set; } // text(1)
		[Column("Fin_heatplace"),     Nullable] public short? FinHeatplace     { get; set; } // Short
		[Column("Fin_jdheatplace"),   Nullable] public short? FinJdheatplace   { get; set; } // Short
		[Column("Fin_place"),         Nullable] public short? FinPlace         { get; set; } // Short
		[Column("Fin_jdplace"),       Nullable] public short? FinJdplace       { get; set; } // Short
		[Column("Fin_exh"),           Nullable] public char?  FinExh           { get; set; } // text(1)
		[Column("Fin_points"),        Nullable] public short? FinPoints        { get; set; } // Short
		[Column("Fin_back1"),         Nullable] public float? FinBack1         { get; set; } // Single
		[Column("Fin_back2"),         Nullable] public float? FinBack2         { get; set; } // Single
		[Column("Fin_back3"),         Nullable] public float? FinBack3         { get; set; } // Single
		[Column("Fin_watch1"),        Nullable] public float? FinWatch1        { get; set; } // Single
		[Column("Fin_pad"),           Nullable] public float? FinPad           { get; set; } // Single
		[Column("Fin_reactiontime1"), Nullable] public string FinReactiontime1 { get; set; } // text(5)
		[Column("Fin_dqcode"),        Nullable] public string FinDqcode        { get; set; } // text(2)
		[Column("Fin_dqcodeSecond"),  Nullable] public string FinDqcodeSecond  { get; set; } // text(2)
		[Column("Fin_ptsplace"),      Nullable] public short? FinPtsplace      { get; set; } // Short
		[Column("Fin_heatltr"),       Nullable] public char?  FinHeatltr       { get; set; } // text(1)
		[Column("Fin_TimeType"),      Nullable] public char?  FinTimeType      { get; set; } // text(1)
		[Column("Sem_heat"),          Nullable] public short? SemHeat          { get; set; } // Short
		[Column("Sem_lane"),          Nullable] public short? SemLane          { get; set; } // Short
		[Column("Sem_stat"),          Nullable] public char?  SemStat          { get; set; } // text(1)
		[Column("Sem_Time"),          Nullable] public float? SemTime          { get; set; } // Single
		[Column("Sem_course"),        Nullable] public char?  SemCourse        { get; set; } // text(1)
		[Column("Sem_heatplace"),     Nullable] public short? SemHeatplace     { get; set; } // Short
		[Column("Sem_place"),         Nullable] public short? SemPlace         { get; set; } // Short
		[Column("Sem_jdplace"),       Nullable] public short? SemJdplace       { get; set; } // Short
		[Column("Sem_exh"),           Nullable] public char?  SemExh           { get; set; } // text(1)
		[Column("Sem_points"),        Nullable] public short? SemPoints        { get; set; } // Short
		[Column("Sem_back1"),         Nullable] public float? SemBack1         { get; set; } // Single
		[Column("Sem_back2"),         Nullable] public float? SemBack2         { get; set; } // Single
		[Column("Sem_back3"),         Nullable] public float? SemBack3         { get; set; } // Single
		[Column("Sem_watch1"),        Nullable] public float? SemWatch1        { get; set; } // Single
		[Column("Sem_pad"),           Nullable] public float? SemPad           { get; set; } // Single
		[Column("Sem_reactiontime1"), Nullable] public string SemReactiontime1 { get; set; } // text(5)
		[Column("Sem_dqcode"),        Nullable] public string SemDqcode        { get; set; } // text(2)
		[Column("Sem_dqcodeSecond"),  Nullable] public string SemDqcodeSecond  { get; set; } // text(2)
		[Column("Sem_TimeType"),      Nullable] public char?  SemTimeType      { get; set; } // text(1)
		[Column("Fin_reactiontime2"), Nullable] public string FinReactiontime2 { get; set; } // text(5)
		[Column("Pre_reactiontime2"), Nullable] public string PreReactiontime2 { get; set; } // text(5)
		[Column("Sem_reactiontime2"), Nullable] public string SemReactiontime2 { get; set; } // text(5)
		[Column("Fin_reactiontime3"), Nullable] public string FinReactiontime3 { get; set; } // text(5)
		[Column("Pre_reactiontime3"), Nullable] public string PreReactiontime3 { get; set; } // text(5)
		[Column("Sem_reactiontime3"), Nullable] public string SemReactiontime3 { get; set; } // text(5)
		[Column("Fin_reactiontime4"), Nullable] public string FinReactiontime4 { get; set; } // text(5)
		[Column("Pre_reactiontime4"), Nullable] public string PreReactiontime4 { get; set; } // text(5)
		[Column("Sem_reactiontime4"), Nullable] public string SemReactiontime4 { get; set; } // text(5)
		[Column("dq_type"),           Nullable] public char?  DqType           { get; set; } // text(1)
		[Column("Fin_group"),         Nullable] public short? FinGroup         { get; set; } // Short
		[Column("Fin_dolphin1"),      Nullable] public float? FinDolphin1      { get; set; } // Single
		[Column("Fin_dolphin2"),      Nullable] public float? FinDolphin2      { get; set; } // Single
		[Column("Fin_dolphin3"),      Nullable] public float? FinDolphin3      { get; set; } // Single
		[Column("Pre_dolphin1"),      Nullable] public float? PreDolphin1      { get; set; } // Single
		[Column("Pre_dolphin2"),      Nullable] public float? PreDolphin2      { get; set; } // Single
		[Column("Pre_dolphin3"),      Nullable] public float? PreDolphin3      { get; set; } // Single
		[Column("Sem_dolphin1"),      Nullable] public float? SemDolphin1      { get; set; } // Single
		[Column("Sem_dolphin2"),      Nullable] public float? SemDolphin2      { get; set; } // Single
		[Column("Sem_dolphin3"),      Nullable] public float? SemDolphin3      { get; set; } // Single
		[Column("early_seed"),        Identity] public bool   EarlySeed        { get; set; } // Bit
		[Column("fin_adjuststat"),    Nullable] public char?  FinAdjuststat    { get; set; } // text(1)
		[Column("pre_adjuststat"),    Nullable] public char?  PreAdjuststat    { get; set; } // text(1)
		[Column("sem_adjuststat"),    Nullable] public char?  SemAdjuststat    { get; set; } // text(1)
		[Column("entry_method"),      Nullable] public char?  EntryMethod      { get; set; } // text(1)
		[Column("fin_dqofficial"),    Nullable] public int?   FinDqofficial    { get; set; } // Long
		[Column("pre_dqofficial"),    Nullable] public int?   PreDqofficial    { get; set; } // Long
		[Column("sem_dqofficial"),    Nullable] public int?   SemDqofficial    { get; set; } // Long
		[Column("pre_contacted"),     Identity] public bool   PreContacted     { get; set; } // Bit
	}

	[Table("RelayNames")]
	public partial class RelayName
	{
		[Column("Event_ptr"),   Nullable] public int?   EventPtr   { get; set; } // Long
		[Column("Team_no"),     Nullable] public int?   TeamNo     { get; set; } // Long
		[Column("Team_ltr"),    Nullable] public string TeamLtr    { get; set; } // text(255)
		[Column("Ath_no"),      Nullable] public int?   AthNo      { get; set; } // Long
		[Column("Pos_no"),      Nullable] public short? PosNo      { get; set; } // Short
		[Column("Event_round"), Nullable] public char?  EventRound { get; set; } // text(1)
		[Column("Relay_no"),    Nullable] public int?   RelayNo    { get; set; } // Long
	}

	[Table("ScoreLanes")]
	public partial class ScoreLane
	{
		[Column("lane_00"), Identity] public bool Lane00 { get; set; } // Bit
		[Column("lane_01"), Identity] public bool Lane01 { get; set; } // Bit
		[Column("lane_02"), Identity] public bool Lane02 { get; set; } // Bit
		[Column("lane_03"), Identity] public bool Lane03 { get; set; } // Bit
		[Column("lane_04"), Identity] public bool Lane04 { get; set; } // Bit
		[Column("lane_05"), Identity] public bool Lane05 { get; set; } // Bit
		[Column("lane_06"), Identity] public bool Lane06 { get; set; } // Bit
		[Column("lane_07"), Identity] public bool Lane07 { get; set; } // Bit
		[Column("lane_08"), Identity] public bool Lane08 { get; set; } // Bit
		[Column("lane_09"), Identity] public bool Lane09 { get; set; } // Bit
		[Column("lane_10"), Identity] public bool Lane10 { get; set; } // Bit
		[Column("lane_11"), Identity] public bool Lane11 { get; set; } // Bit
		[Column("lane_12"), Identity] public bool Lane12 { get; set; } // Bit
	}

	[Table("Scoring")]
	public partial class Scoring
	{
		[Column("score_divno"), Nullable] public short? ScoreDivno { get; set; } // Short
		[Column("score_sex"),   Nullable] public char?  ScoreSex   { get; set; } // text(1)
		[Column("score_place"), Nullable] public short? ScorePlace { get; set; } // Short
		[Column("ind_score"),   Nullable] public float? IndScore   { get; set; } // Single
		[Column("rel_score"),   Nullable] public float? RelScore   { get; set; } // Single
	}

	[Table("ScoringImprovement")]
	public partial class ScoringImprovement
	{
		[Column("list_no"),       Nullable] public short? ListNo       { get; set; } // Short
		[Column("diff_lowtime"),  Nullable] public float? DiffLowtime  { get; set; } // Single
		[Column("diff_hightime"), Nullable] public float? DiffHightime { get; set; } // Single
		[Column("pt_score"),      Nullable] public float? PtScore      { get; set; } // Single
		[Column("swim_score"),    Nullable] public float? SwimScore    { get; set; } // Single
	}

	[Table("Session")]
	public partial class Session
	{
		[Column("Sess_no"),             Nullable            ] public short? SessNo             { get; set; } // Short
		[Column("Sess_ltr"),            Nullable            ] public char?  SessLtr            { get; set; } // text(1)
		[Column("Sess_ptr"),            PrimaryKey, Identity] public int    SessPtr            { get; set; } // Long
		[Column("Sess_day"),            Nullable            ] public short? SessDay            { get; set; } // Short
		[Column("Sess_starttime"),      Nullable            ] public int?   SessStarttime      { get; set; } // Long
		[Column("Sess_entrymax"),       Nullable            ] public short? SessEntrymax       { get; set; } // Short
		[Column("Sess_name"),           Nullable            ] public string SessName           { get; set; } // text(60)
		[Column("Sess_interval"),       Nullable            ] public short? SessInterval       { get; set; } // Short
		[Column("Sess_course"),         Nullable            ] public char?  SessCourse         { get; set; } // text(1)
		[Column("Sess_entrymaxind"),    Nullable            ] public short? SessEntrymaxind    { get; set; } // Short
		[Column("Sess_entrymaxrel"),    Nullable            ] public short? SessEntrymaxrel    { get; set; } // Short
		[Column("Sess_backinterval"),   Nullable            ] public short? SessBackinterval   { get; set; } // Short
		[Column("Sess_divinginterval"), Nullable            ] public short? SessDivinginterval { get; set; } // Short
		[Column("Sess_chaseinterval"),  Nullable            ] public short? SessChaseinterval  { get; set; } // Short
	}

	[Table("Sessitem")]
	public partial class Sessitem
	{
		[Column("Sess_order"),            Nullable] public int?   SessOrder            { get; set; } // Long
		[Column("Sess_ptr"),              Nullable] public int?   SessPtr              { get; set; } // Long
		[Column("Event_ptr"),             Nullable] public int?   EventPtr             { get; set; } // Long
		[Column("Sess_rnd"),              Nullable] public char?  SessRnd              { get; set; } // text(1)
		[Column("Rept_type"),             Nullable] public char?  ReptType             { get; set; } // text(1)
		[Column("Delay_seconds"),         Nullable] public int?   DelaySeconds         { get; set; } // Long
		[Column("Alt_With"),              Identity] public bool   AltWith              { get; set; } // Bit
		[Column("Timed_finalheats"),      Nullable] public short? TimedFinalheats      { get; set; } // Short
		[Column("EventTo_AlternateWith"), Nullable] public int?   EventToAlternateWith { get; set; } // Long
		[Column("Delay_desc"),            Nullable] public string DelayDesc            { get; set; } // text(50)
		[Column("AltHeats_StartCount"),   Nullable] public short? AltHeatsStartCount   { get; set; } // Short
	}

	[Table("Split")]
	public partial class Split
	{
		[Column("Event_ptr"),  Nullable] public int?   EventPtr  { get; set; } // Long
		[Column("Ath_no"),     Nullable] public int?   AthNo     { get; set; } // Long
		[Column("Team_no"),    Nullable] public int?   TeamNo    { get; set; } // Long
		[Column("Team_ltr"),   Nullable] public char?  TeamLtr   { get; set; } // text(1)
		[Column("Rnd_ltr"),    Nullable] public char?  RndLtr    { get; set; } // text(1)
		[Column("Split_no"),   Nullable] public short? SplitNo   { get; set; } // Short
		[Column("Split_Time"), Nullable] public float? SplitTime { get; set; } // Single
		[Column("Relay_no"),   Nullable] public int?   RelayNo   { get; set; } // Long
	}

	[Table("StdLanes")]
	public partial class StdLane
	{
		[Column("tot_lanes"), PrimaryKey, Nullable] public short? TotLanes { get; set; } // Short
		[Column("order_01"),              Nullable] public short? Order01  { get; set; } // Short
		[Column("order_02"),              Nullable] public short? Order02  { get; set; } // Short
		[Column("order_03"),              Nullable] public short? Order03  { get; set; } // Short
		[Column("order_04"),              Nullable] public short? Order04  { get; set; } // Short
		[Column("order_05"),              Nullable] public short? Order05  { get; set; } // Short
		[Column("order_06"),              Nullable] public short? Order06  { get; set; } // Short
		[Column("order_07"),              Nullable] public short? Order07  { get; set; } // Short
		[Column("order_08"),              Nullable] public short? Order08  { get; set; } // Short
		[Column("order_09"),              Nullable] public short? Order09  { get; set; } // Short
		[Column("order_10"),              Nullable] public short? Order10  { get; set; } // Short
		[Column("order_11"),              Nullable] public short? Order11  { get; set; } // Short
		[Column("order_12"),              Nullable] public short? Order12  { get; set; } // Short
	}

	[Table("TagNames")]
	public partial class TagName
	{
		[Column("tag_ptr"),       Identity] public int    TagPtr         { get; set; } // Long
		[Column("tag_name"),      Nullable] public string TagName_Column { get; set; } // text(4)
		[Column("for_scoring"),   Identity] public bool   ForScoring     { get; set; } // Bit
		[Column("for_entryqual"), Identity] public bool   ForEntryqual   { get; set; } // Bit
		[Column("for_timestd"),   Identity] public bool   ForTimestd     { get; set; } // Bit
		[Column("tag_desc"),      Nullable] public string TagDesc        { get; set; } // text(20)
	}

	[Table("Team")]
	public partial class Team
	{
		[Column("Team_no"),               PrimaryKey, Identity] public int    TeamNo               { get; set; } // Long
		[Column("Team_name"),             Nullable            ] public string TeamName             { get; set; } // text(30)
		[Column("Team_short"),            Nullable            ] public string TeamShort            { get; set; } // text(16)
		[Column("Team_abbr"),             Nullable            ] public string TeamAbbr             { get; set; } // text(5)
		[Column("Team_stat"),             Nullable            ] public char?  TeamStat             { get; set; } // text(1)
		[Column("Team_lsc"),              Nullable            ] public string TeamLsc              { get; set; } // text(3)
		[Column("Team_div"),              Nullable            ] public short? TeamDiv              { get; set; } // Short
		[Column("Team_region"),           Nullable            ] public short? TeamRegion           { get; set; } // Short
		[Column("Team_head"),             Nullable            ] public string TeamHead             { get; set; } // text(30)
		[Column("Team_asst"),             Nullable            ] public string TeamAsst             { get; set; } // text(30)
		[Column("Team_addr1"),            Nullable            ] public string TeamAddr1            { get; set; } // text(30)
		[Column("Team_addr2"),            Nullable            ] public string TeamAddr2            { get; set; } // text(30)
		[Column("Team_city"),             Nullable            ] public string TeamCity             { get; set; } // text(30)
		[Column("Team_prov"),             Nullable            ] public string TeamProv             { get; set; } // text(30)
		[Column("Team_statenew"),         Nullable            ] public string TeamStatenew         { get; set; } // text(3)
		[Column("Team_zip"),              Nullable            ] public string TeamZip              { get; set; } // text(10)
		[Column("Team_cntry"),            Nullable            ] public string TeamCntry            { get; set; } // text(3)
		[Column("Team_daytele"),          Nullable            ] public string TeamDaytele          { get; set; } // text(20)
		[Column("Team_evetele"),          Nullable            ] public string TeamEvetele          { get; set; } // text(20)
		[Column("Team_faxtele"),          Nullable            ] public string TeamFaxtele          { get; set; } // text(20)
		[Column("Team_email"),            Nullable            ] public string TeamEmail            { get; set; } // text(36)
		[Column("Team_c3"),               Nullable            ] public string TeamC3               { get; set; } // text(30)
		[Column("Team_c4"),               Nullable            ] public string TeamC4               { get; set; } // text(30)
		[Column("Team_c5"),               Nullable            ] public string TeamC5               { get; set; } // text(30)
		[Column("Team_c6"),               Nullable            ] public string TeamC6               { get; set; } // text(30)
		[Column("Team_c7"),               Nullable            ] public string TeamC7               { get; set; } // text(30)
		[Column("Team_c8"),               Nullable            ] public string TeamC8               { get; set; } // text(30)
		[Column("Team_c9"),               Nullable            ] public string TeamC9               { get; set; } // text(30)
		[Column("Team_c10"),              Nullable            ] public string TeamC10              { get; set; } // text(30)
		[Column("Team_altabbr"),          Nullable            ] public string TeamAltabbr          { get; set; } // text(5)
		[Column("Team_NoPoints"),                     Identity] public bool   TeamNoPoints         { get; set; } // Bit
		[Column("Team_Selected"),                     Identity] public bool   TeamSelected         { get; set; } // Bit
		[Column("Team_altname"),          Nullable            ] public string TeamAltname          { get; set; } // text(16)
		[Column("NoTeam_surcharge"),                  Identity] public bool   NoTeamSurcharge      { get; set; } // Bit
		[Column("NoFacility_surcharge"),              Identity] public bool   NoFacilitySurcharge  { get; set; } // Bit
		[Column("NoAthlete_surcharge"),               Identity] public bool   NoAthleteSurcharge   { get; set; } // Bit
		[Column("Team_cell"),             Nullable            ] public string TeamCell             { get; set; } // text(20)
		[Column("NoRelayOnly_surcharge"),             Identity] public bool   NoRelayOnlySurcharge { get; set; } // Bit
		[Column("Team_Code"),             Nullable            ] public string TeamCode             { get; set; } // text(30)
		[Column("Team_Gender"),           Nullable            ] public char?  TeamGender           { get; set; } // text(1)
	}

	[Table("TeamCoaches")]
	public partial class TeamCoach
	{
		[Column("Coach_no"),                PrimaryKey, Identity] public int       CoachNo                { get; set; } // Long
		[Column("Team_no"),                 Nullable            ] public int?      TeamNo                 { get; set; } // Long
		[Column("Coach_LastName"),          Nullable            ] public string    CoachLastName          { get; set; } // text(20)
		[Column("Coach_FirstName"),         Nullable            ] public string    CoachFirstName         { get; set; } // text(20)
		[Column("Coach_Title"),             Nullable            ] public string    CoachTitle             { get; set; } // text(15)
		[Column("Primary_MaleHeadCoach"),               Identity] public bool      PrimaryMaleHeadCoach   { get; set; } // Bit
		[Column("Primary_FemaleHeadCoach"),             Identity] public bool      PrimaryFemaleHeadCoach { get; set; } // Bit
		[Column("MaleCoach_Only"),                      Identity] public bool      MaleCoachOnly          { get; set; } // Bit
		[Column("FemaleCoach_Only"),                    Identity] public bool      FemaleCoachOnly        { get; set; } // Bit
		[Column("Coach_Phone"),             Nullable            ] public string    CoachPhone             { get; set; } // text(20)
		[Column("Coach_Cell"),              Nullable            ] public string    CoachCell              { get; set; } // text(20)
		[Column("Coach_EMail"),             Nullable            ] public string    CoachEMail             { get; set; } // text(36)
		[Column("Coach_Cert1"),             Nullable            ] public string    CoachCert1             { get; set; } // text(15)
		[Column("Coach_Cert2"),             Nullable            ] public string    CoachCert2             { get; set; } // text(15)
		[Column("Coach_Cert3"),             Nullable            ] public string    CoachCert3             { get; set; } // text(15)
		[Column("Coach_Cert4"),             Nullable            ] public string    CoachCert4             { get; set; } // text(15)
		[Column("Coach_ExpDate1"),          Nullable            ] public DateTime? CoachExpDate1          { get; set; } // DateTime
		[Column("Coach_ExpDate2"),          Nullable            ] public DateTime? CoachExpDate2          { get; set; } // DateTime
		[Column("Coach_ExpDate3"),          Nullable            ] public DateTime? CoachExpDate3          { get; set; } // DateTime
		[Column("Coach_ExpDate4"),          Nullable            ] public DateTime? CoachExpDate4          { get; set; } // DateTime
	}

	[Table("TimeStd")]
	public partial class TimeStd
	{
		[Column("tag_ptr"),    Nullable] public int?   TagPtr    { get; set; } // Long
		[Column("tag_gender"), Nullable] public char?  TagGender { get; set; } // text(1)
		[Column("tag_indrel"), Nullable] public char?  TagIndrel { get; set; } // text(1)
		[Column("tag_dist"),   Nullable] public int?   TagDist   { get; set; } // Long
		[Column("tag_stroke"), Nullable] public char?  TagStroke { get; set; } // text(1)
		[Column("low_age"),    Nullable] public short? LowAge    { get; set; } // Short
		[Column("high_Age"),   Nullable] public short? HighAge   { get; set; } // Short
		[Column("tag_time"),   Nullable] public float? TagTime   { get; set; } // Single
		[Column("tag_course"), Nullable] public char?  TagCourse { get; set; } // text(1)
		[Column("div_abbr"),   Nullable] public string DivAbbr   { get; set; } // text(10)
	}

	[Table("WaveOffset")]
	public partial class WaveOffset
	{
		[Column("Event_ptr"),   Nullable] public int?   EventPtr          { get; set; } // Long
		[Column("Heat_no"),     Nullable] public short? HeatNo            { get; set; } // Short
		[Column("Rnd_ltr"),     Nullable] public char?  RndLtr            { get; set; } // text(1)
		[Column("Wave_offset"), Nullable] public float? WaveOffset_Column { get; set; } // Single
	}

	public static partial class TableExtensions
	{
		public static Athlete Find(this ITable<Athlete> table, int AthNo)
		{
			return table.FirstOrDefault(t =>
				t.AthNo == AthNo);
		}

		public static CombinedEvent Find(this ITable<CombinedEvent> table, int CombEventPtr)
		{
			return table.FirstOrDefault(t =>
				t.CombEventPtr == CombEventPtr);
		}

		public static Event Find(this ITable<Event> table, int EventPtr)
		{
			return table.FirstOrDefault(t =>
				t.EventPtr == EventPtr);
		}

		public static MemorizedReport Find(this ITable<MemorizedReport> table, int MemPtr)
		{
			return table.FirstOrDefault(t =>
				t.MemPtr == MemPtr);
		}

		public static Session Find(this ITable<Session> table, int SessPtr)
		{
			return table.FirstOrDefault(t =>
				t.SessPtr == SessPtr);
		}

		public static StdLane Find(this ITable<StdLane> table, short? TotLanes)
		{
			return table.FirstOrDefault(t =>
				t.TotLanes == TotLanes);
		}

		public static Team Find(this ITable<Team> table, int TeamNo)
		{
			return table.FirstOrDefault(t =>
				t.TeamNo == TeamNo);
		}

		public static TeamCoach Find(this ITable<TeamCoach> table, int CoachNo)
		{
			return table.FirstOrDefault(t =>
				t.CoachNo == CoachNo);
		}
	}
}
