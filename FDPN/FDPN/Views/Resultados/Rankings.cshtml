@model FDPN.ViewModels.Resultados.RankingViewModel

@{
    ViewBag.Title = "Rankings";

}

@using (Html.BeginForm("Rankings", "Resultados", FormMethod.Post))
{
    <section>
        <div class="wrapper site-homepage__pushup">
            <header class="site-homepage__section__header">
                <h2 class="site-title site-title--ultra site-title--ultra--primary">Rankings</h2>
                <p class="u-type--medium u-type--delta u-spc-bottom--med"> @Model.distancia m estilo @Model.estilo en piscina @Model.piscina </p>
            </header>
            <div class="site-homepage__section__content">
                <div class="u-grid u-spc-bottom--med">

                    <div class="site-ranking__filter">
                        <h6 class="control-label col-md-6 btn--ghost">Distancia</h6>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.distancia, new SelectList(Model.distancias), "Escoja la distancia", new { @class = "js-calendarFilter js-selectEventType input input--select input--med" })
                        </div>
                    </div>
                    <div class="site-ranking__filter">

                        <h6 class="control-label col-md-6 btn--ghost">Estilo</h6>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.estilo, new SelectList(Model.Estilos), "Escoja el estilo", new { @class = "js-calendarFilter js-selectEventType input input--select input--med" })
                        </div>
                    </div>

                    <div class="site-ranking__filter">
                        <h6 class="control-label col-md-6 btn--ghost">
                            Piscina
                        </h6>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.piscina, new SelectList(Model.piscinas, "Key", "Value"), "Escoja el tipo de piscina", new { @class = "js-calendarFilter js-selectEventType input input--select input--med" })
                        </div>
                    </div>

                    <div class="site-ranking__filter">
                        <h6 class="control-label col-md-6 btn--ghost">Sexo</h6>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.Sexo, new SelectList(Model.Sexo, "Key", "Value"), "Escoja el sexo", new { @class = "js-calendarFilter js-selectEventType input input--select input--med" })
                        </div>
                    </div>
                </div>
                <div class="espaciado"></div>
                <div class="u-grid u-spc-bottom--med">
                    <div class="site-ranking__filter">
                        <h6 class="control-label col-md-6 btn--ghost">
                            Periodo
                        </h6>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.Periodo, new SelectList(Model.Periodo), "Escoja el periodo a filtrar", new { @class = "js-calendarFilter js-selectEventType input input--select input--med" })
                        </div>
                    </div>
                    <div class="site-ranking__filter">
                        <h6 class="control-label col-md-6 btn--ghost">
                            Edad mínima
                        </h6>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.edadminima, new SelectList(Model.edadminima), "Escoja la edad mínima", new { @class = "js-calendarFilter js-selectEventType input input--select input--med" })
                        </div>
                    </div>
                    <div class="site-ranking__filter">
                        <h6 class="control-label col-md-6 btn--ghost">
                            Edad máxima
                        </h6>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.edadmaxima, new SelectList(Model.edadmaxima), "Escoja la edad máxima", new { @class = "js-calendarFilter js-selectEventType input input--select input--med" })
                        </div>
                    </div>
                    <div class="site-ranking__filter">
                        <input type="submit" class="btn btn--primaryapnea btn--lrg u-rounded" value="Ver ranking">
                    </div>


                </div>
            </div>

        </div>
    </section>
}
<div class="site-homepage__section site-aboutwidget u-bg--poolpeopleranking u-bg--blueoverlay">
    <div class="site-contentpage">
        @if(Model.resultados.Count()>0)
        {
               
                    
                <ul id="ul-example" class="row-fluid">
                    @for (int i = 0; i < 3; i++)
                    {
                    <li class="col-sm-12" data-color="gray">
                        <div class="col-sm-3">
                            <div class="espaciado"></div>
                            <div class=@("premio"+(i+1) )>
                               
                            </div>
                            @*<div class="">
                            @(i + 1)
                            </div>*@
                           
                        </div>
                        <div class="col-sm-9">
                            <h2 class="site-title site-title--basic site-title--basic--negative u-spc-bottom--med">

                                @Html.ActionLink(Model.resultados[i].Athlete1.First, "Nadador", "Resultados", new { id = Model.resultados[i].AthleteId }, new { @class = "ranking1detalle" })
                                @Html.ActionLink(Model.resultados[i].Athlete1.Last, "Nadador", "Resultados", new { @id = Model.resultados[i].AthleteId }, new { @class = "ranking1detalle" })

                            </h2>
                            
                            @if (Model.resultados[i].I_R == "L")
                            {  <p class="u-type--medium u-type--delta u-type--negative">@Model.resultados[i].SCORE - Posta</p> }
                            else
                            {  <p class="u-type--medium u-type--delta u-type--negative">@Model.resultados[i].SCORE</p>}
                            <h6 class="ranking1detalle">@Model.resultados[i].MEET1.Start.ToString("dd/MMM/yyyy")</h6>
                            <h6 class="ranking1detalle">@Model.resultados[i].MEET1.MName</h6>
                            <div class="espaciado"></div>
                        </div>
                      
                    </li>
                    
                   }
                </ul>

                <div class="espaciado"></div>
        @*El resto del ranking*@
        <table class="site-rankingwidget__table">
            <tbody>
               @for (int i = 3; i < Model.resultados.Count(); i++)
               {
                <tr>
                    <td>@(i + 1)</td>
                    <td>
                        @Html.ActionLink(Model.resultados[i].Athlete1.First, "Nadador", "Resultados", new { id = Model.resultados[i].AthleteId }, new { @class = "ranking1detalle" })
                        @Html.ActionLink(Model.resultados[i].Athlete1.Last, "Nadador", "Resultados", new { @id = Model.resultados[i].AthleteId }, new { @class = "ranking1detalle" })

                    </td>
                    <td>
                        @Model.resultados[i].SCORE

                </td>
                @if (Model.resultados[i].I_R == "L")
                {
                    <td>Posta</td> }
                else
                {
                    <td></td>}
                <td class="weak">@Model.resultados[i].MEET1.Start.ToString("dd/MMM/yyyy")</td>
                <td>@Model.resultados[i].Athlete1.Birth</td>
                <td>@Model.resultados[i].Athlete1.Age</td>
                </tr>
                }
            </tbody>
        </table>
        }
        else
        {
            <p class="u-type--medium u-type--delta u-spc-bottom--med"> No obtuve resultados </p>
        }
    </div>
</div>

   