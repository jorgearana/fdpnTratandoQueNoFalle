@model FDPN.ViewModels.Administrador.IngresoDatosViewModel
@{
    ViewBag.Title = "IngresoDatos";
    Layout = "~/Views/Shared/_LayoutWYSWYG.cshtml";
}

<div class="panel panel-primary">

    <div class="col-lg-12 text-center panel-heading panel-head">
        <h2 class="section-heading">Administrador de datos</h2>
        <h5 class="section-subheading">Mediante esta página podrá ingresar noticias, bases, documentos, resultados, etc.</h5>
    </div>
</div>
<div class="row ">
    <div class="col-lg-12">
        <div class="panel panel-primary">
            <h3 class="panel-heading panel-head">Adjuntar archivos a las notas</h3>


            <form id="fileupload" method="POST" enctype="multipart/form-data" data-url="@Url.Action("Upload","FileUpload")">
                <div class="row fileupload-buttonbar">
                    <div class="col-lg-7">
                        <!-- The fileinput-button span is used to style the file input field as button -->
                        <span class="btn btn-success fileinput-button">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span>Add files...</span>
                            <input type="file" name="files[]" multiple>
                        </span>
                        <button type="submit" class="btn btn-primary start">
                            <i class="glyphicon glyphicon-upload"></i>
                            <span>Start upload</span>
                        </button>
                        <button type="reset" class="btn btn-warning cancel">
                            <i class="glyphicon glyphicon-ban-circle"></i>
                            <span>Cancel upload</span>
                        </button>
                        <button type="button" class="btn btn-danger delete">
                            <i class="glyphicon glyphicon-trash"></i>
                            <span>Delete</span>
                        </button>
                        <input type="checkbox" class="toggle">
                        <!-- The global file processing state -->
                        <span class="fileupload-process"></span>
                    </div>
                    <!-- The global progress state -->
                    <div class="col-lg-5 fileupload-progress fade">
                        <!-- The global progress bar -->
                        <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                            <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                        </div>
                        <!-- The extended global progress state -->
                        <div class="progress-extended">&nbsp;</div>
                    </div>
                </div>
                <!-- The global progress state -->
                <div class="col-lg-5 fileupload-progress fade">
                    <!-- The global progress bar -->
                    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                        <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                    </div>
                    <!-- The extended global progress state -->
                    <div class="progress-extended">&nbsp;</div>
                </div>

                <!-- The table listing the files available for upload/download -->
                <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
            </form>

            <br>
            <!-- The blueimp Gallery widget -->
            <div id="blueimp-gallery" class="blueimp-gallery blueimp-gallery-controls" data-filter=":even">
                <div class="slides"></div>
                <h3 class="title"></h3>
                <a class="prev">‹</a>
                <a class="next">›</a>
                <a class="close">×</a>
                <a class="play-pause"></a>
                <ol class="indicator"></ol>
            </div>

        </div>
    </div>
    <div class="col-lg-12 panel panel-primary">

        @using (Html.BeginForm())
        {
            <div class="col-lg-12 text-center panel-heading panel-head">
                <h2 class="section-heading">Dirección video Youtube</h2>
                @Html.TextBoxFor(model =>model.noticia.Youtube, new { @class= "inputYoutube" })
               
            </div>
            <div class="col-lg-12 text-center panel-heading panel-head">
                <h2 class="section-heading">Escoger el tipo de dato a subir</h2>
               
            </div>
            <div class="row text-center">
                <div class="col-md-6">
                    <span class="fa-stack fa-4x">
                        <i class="fa fa-circle fa-stack-2x text-primary"></i>
                        <i class="fa fa-shopping-cart fa-stack-1x fa-inverse"></i>
                    </span>
                    <h4 class="service-heading">Disciplinas</h4>
                    <p class="text-muted">Escoja la disciplina a la que depende este dato.</p>
                    @Html.DropDownListFor(model => model.noticia.DisciplinaId, new SelectList(Model.disciplinas, "DisciplinaId", "TipoDisciplina"), "Escoja una disciplina", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.noticia.DisciplinaId)
                   

                </div>
                <div class="col-md-6">
                    <span class="fa-stack fa-4x">
                        <i class="fa fa-circle fa-stack-2x text-primary"></i>
                        <i class="fa fa-laptop fa-stack-1x fa-inverse"></i>
                    </span>
                    <h4 class="service-heading">Categoría</h4>
                    <p class="text-muted">Aquí podrá escoger el tipo de documento que desea crear.</p>
                    @Html.DropDownListFor(model => model.noticia.CategoriaId, new SelectList(Model.categorias, "CategoriaId", "TipoNoticia"), "Escoja una categoría", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.noticia.CategoriaId)

                </div>
                @*<div class="col-md-4">
                    <span class="fa-stack fa-4x">
                        <i class="fa fa-circle fa-stack-2x text-primary"></i>
                        <i class="fa fa-lock fa-stack-1x fa-inverse"></i>
                    </span>
                    <h4 class="service-heading">Aún no disponible</h4>
                    <p class="text-muted">.</p>
                </div>*@
            </div>
            <br />
            <br />
            @*Summernote*@
            <div class="panel panel-primary">
                @*<div class="panel-heading panel-head">Add Content</div>*@
                <div class="panel-body">

                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Título</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.noticia.Titulo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.noticia.Titulo)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Palabras claves</label>
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.noticia.Palabrasclaves, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.noticia.Palabrasclaves)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Descripción corta</label>
                            <div class="col-lg-9">
                                @Html.TextAreaFor(model => model.noticia.Corta, new { @class = "form-control", @row = 5 })
                                @Html.ValidationMessageFor(model => model.noticia.Corta)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-2 control-label">Cuerpo documento</label>
                            <div class="col-lg-9">
                                @Html.TextAreaFor(model => model.noticia.Larga, new { @class = "form-control", @row = 5 })
                                @Html.ValidationMessageFor(model => model.noticia.Larga)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-9"></div>
                            <div class="col-lg-3">
                                <button class="btn btn-success" id="btnSubmit" type="submit">
                                    Submit
                                </button>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        }
    </div>
    
</div>





    <!-- The template to display files available for upload -->
    <script id="template-upload" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
        <tr class="template-upload fade">
            <td>
                <span class="preview"></span>
            </td>
            <td>
                <p class="name">{%=file.name%}</p>
                <strong class="error text-danger"></strong>
            </td>
            <td>
                <p class="size">Processing...</p>
                <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
            </td>
            <td>
                {% if (!i && !o.options.autoUpload) { %}
                <button class="btn btn-primary start" disabled>
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start</span>
                </button>
                {% } %}
                {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
                {% } %}
            </td>
        </tr>
        {% } %}
    </script>
    <!-- The template to display files available for download -->
    <script id="template-download" type="text/x-tmpl">
        {% for (var i=0, file; file=o.files[i]; i++) { %}
        <tr class="template-download fade">
            <td>
                <span class="preview">
                    {% if (file.thumbnailUrl) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                    {% } %}
                </span>
            </td>
            <td>
                <p class="name">
                    {% if (file.url) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                    {% } else { %}
                    <span>{%=file.name%}</span>
                    {% } %}
                </p>
                {% if (file.error) { %}
                <div><span class="label label-danger">Error</span> {%=file.error%}</div>
                {% } %}
            </td>
            <td>
                <span class="size">{%=o.formatFileSize(file.size)%}</span>
            </td>
            <td>
                {% if (file.deleteUrl) { %}
                <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}" {% if (file.deletewithcredentials) { %} data-xhr-fields='{"withCredentials":true}' {% } %}>
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1" class="toggle">
                {% } else { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
                {% } %}
            </td>
        </tr>
        {% } %}
    </script>




